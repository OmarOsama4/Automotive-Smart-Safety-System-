Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    main.o(.ARM.exidx.text.Delay) refers to main.o(.text.Delay) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.initBuzzer) refers to main.o(.text.initBuzzer) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.initGearSwitch) refers to main.o(.text.initGearSwitch) for [Anonymous Symbol]
    main.o(.text.gearreverseon) refers to main.o(.bss.gearReverse) for gearReverse
    main.o(.ARM.exidx.text.gearreverseon) refers to main.o(.text.gearreverseon) for [Anonymous Symbol]
    main.o(.text.gearreverseoff) refers to main.o(.bss.gearReverse) for gearReverse
    main.o(.ARM.exidx.text.gearreverseoff) refers to main.o(.text.gearreverseoff) for [Anonymous Symbol]
    main.o(.text.GearSwitchTask) refers to main.o(.bss.gearSwitchState) for gearSwitchState
    main.o(.text.GearSwitchTask) refers to main.o(.text.gearreverseoff) for gearreverseoff
    main.o(.text.GearSwitchTask) refers to main.o(.text.gearreverseon) for gearreverseon
    main.o(.text.GearSwitchTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.GearSwitchTask) refers to main.o(.text.GearSwitchTask) for [Anonymous Symbol]
    main.o(.text.I2C_Init) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    main.o(.text.I2C_Init) refers to sysctl.o(i.SysCtlPeripheralReset) for SysCtlPeripheralReset
    main.o(.text.I2C_Init) refers to gpio.o(i.GPIOPinConfigure) for GPIOPinConfigure
    main.o(.text.I2C_Init) refers to gpio.o(i.GPIOPinTypeI2CSCL) for GPIOPinTypeI2CSCL
    main.o(.text.I2C_Init) refers to gpio.o(i.GPIOPinTypeI2C) for GPIOPinTypeI2C
    main.o(.text.I2C_Init) refers to sysctl.o(i.SysCtlClockGet) for SysCtlClockGet
    main.o(.text.I2C_Init) refers to i2c.o(i.I2CMasterInitExpClk) for I2CMasterInitExpClk
    main.o(.ARM.exidx.text.I2C_Init) refers to main.o(.text.I2C_Init) for [Anonymous Symbol]
    main.o(.text.I2CSendByte) refers to i2c.o(i.I2CMasterSlaveAddrSet) for I2CMasterSlaveAddrSet
    main.o(.text.I2CSendByte) refers to i2c.o(i.I2CMasterDataPut) for I2CMasterDataPut
    main.o(.text.I2CSendByte) refers to i2c.o(i.I2CMasterControl) for I2CMasterControl
    main.o(.text.I2CSendByte) refers to i2c.o(i.I2CMasterBusy) for I2CMasterBusy
    main.o(.ARM.exidx.text.I2CSendByte) refers to main.o(.text.I2CSendByte) for [Anonymous Symbol]
    main.o(.text.expanderWrite) refers to main.o(.text.I2CSendByte) for I2CSendByte
    main.o(.ARM.exidx.text.expanderWrite) refers to main.o(.text.expanderWrite) for [Anonymous Symbol]
    main.o(.text.pulseEnable) refers to main.o(.text.expanderWrite) for expanderWrite
    main.o(.text.pulseEnable) refers to main.o(.text.Delay) for Delay
    main.o(.ARM.exidx.text.pulseEnable) refers to main.o(.text.pulseEnable) for [Anonymous Symbol]
    main.o(.text.write4bits) refers to main.o(.text.expanderWrite) for expanderWrite
    main.o(.text.write4bits) refers to main.o(.text.pulseEnable) for pulseEnable
    main.o(.ARM.exidx.text.write4bits) refers to main.o(.text.write4bits) for [Anonymous Symbol]
    main.o(.text.send) refers to main.o(.text.write4bits) for write4bits
    main.o(.ARM.exidx.text.send) refers to main.o(.text.send) for [Anonymous Symbol]
    main.o(.text.command) refers to main.o(.text.send) for send
    main.o(.ARM.exidx.text.command) refers to main.o(.text.command) for [Anonymous Symbol]
    main.o(.text.write) refers to main.o(.text.send) for send
    main.o(.ARM.exidx.text.write) refers to main.o(.text.write) for [Anonymous Symbol]
    main.o(.text.write_string) refers to main.o(.text.write) for write
    main.o(.ARM.exidx.text.write_string) refers to main.o(.text.write_string) for [Anonymous Symbol]
    main.o(.text.display) refers to main.o(.text.command) for command
    main.o(.ARM.exidx.text.display) refers to main.o(.text.display) for [Anonymous Symbol]
    main.o(.text.configDisplay) refers to main.o(.text.command) for command
    main.o(.ARM.exidx.text.configDisplay) refers to main.o(.text.configDisplay) for [Anonymous Symbol]
    main.o(.text.clear) refers to main.o(.text.command) for command
    main.o(.text.clear) refers to main.o(.text.Delay) for Delay
    main.o(.ARM.exidx.text.clear) refers to main.o(.text.clear) for [Anonymous Symbol]
    main.o(.text.home) refers to main.o(.text.command) for command
    main.o(.text.home) refers to main.o(.text.Delay) for Delay
    main.o(.ARM.exidx.text.home) refers to main.o(.text.home) for [Anonymous Symbol]
    main.o(.text.begin) refers to main.o(.text.I2C_Init) for I2C_Init
    main.o(.text.begin) refers to main.o(.text.Delay) for Delay
    main.o(.text.begin) refers to main.o(.text.expanderWrite) for expanderWrite
    main.o(.text.begin) refers to main.o(.text.write4bits) for write4bits
    main.o(.text.begin) refers to main.o(.text.command) for command
    main.o(.text.begin) refers to main.o(.text.clear) for clear
    main.o(.text.begin) refers to main.o(.text.home) for home
    main.o(.ARM.exidx.text.begin) refers to main.o(.text.begin) for [Anonymous Symbol]
    main.o(.text.LCDI2CInit) refers to main.o(.text.begin) for begin
    main.o(.ARM.exidx.text.LCDI2CInit) refers to main.o(.text.LCDI2CInit) for [Anonymous Symbol]
    main.o(.text.setCursor) refers to main.o(.text.command) for command
    main.o(.ARM.exidx.text.setCursor) refers to main.o(.text.setCursor) for [Anonymous Symbol]
    main.o(.text.noCursor) refers to main.o(.text.command) for command
    main.o(.ARM.exidx.text.noCursor) refers to main.o(.text.noCursor) for [Anonymous Symbol]
    main.o(.text.backlight) refers to main.o(.text.expanderWrite) for expanderWrite
    main.o(.ARM.exidx.text.backlight) refers to main.o(.text.backlight) for [Anonymous Symbol]
    main.o(.text.scrollDisplayRight) refers to main.o(.text.command) for command
    main.o(.ARM.exidx.text.scrollDisplayRight) refers to main.o(.text.scrollDisplayRight) for [Anonymous Symbol]
    main.o(.text.noDisplay) refers to main.o(.text.command) for command
    main.o(.ARM.exidx.text.noDisplay) refers to main.o(.text.noDisplay) for [Anonymous Symbol]
    main.o(.text.printChar) refers to main.o(.text.write) for write
    main.o(.ARM.exidx.text.printChar) refers to main.o(.text.printChar) for [Anonymous Symbol]
    main.o(.text.print) refers to strlen.o(.text) for strlen
    main.o(.text.print) refers to main.o(.text.write_string) for write_string
    main.o(.ARM.exidx.text.print) refers to main.o(.text.print) for [Anonymous Symbol]
    main.o(.text.clearRow) refers to main.o(.text.setCursor) for setCursor
    main.o(.text.clearRow) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.clearRow) refers to main.o(.text.print) for print
    main.o(.ARM.exidx.text.clearRow) refers to main.o(.text.clearRow) for [Anonymous Symbol]
    main.o(.text.displayTextOnLCD) refers to main.o(.text.setCursor) for setCursor
    main.o(.text.displayTextOnLCD) refers to main.o(.text.print) for print
    main.o(.ARM.exidx.text.displayTextOnLCD) refers to main.o(.text.displayTextOnLCD) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.initButtons) refers to main.o(.text.initButtons) for [Anonymous Symbol]
    main.o(.text.toggleDoorLock) refers to main.o(.bss.doorLocked) for doorLocked
    main.o(.text.toggleDoorLock) refers to main.o(.bss.dis) for dis
    main.o(.text.toggleDoorLock) refers to main.o(.text.clearRow) for clearRow
    main.o(.text.toggleDoorLock) refers to main.o(.rodata.str1.1) for .L.str.1
    main.o(.text.toggleDoorLock) refers to main.o(.text.displayTextOnLCD) for displayTextOnLCD
    main.o(.ARM.exidx.text.toggleDoorLock) refers to main.o(.text.toggleDoorLock) for [Anonymous Symbol]
    main.o(.text.showdoorstatus) refers to main.o(.bss.doorLocked) for doorLocked
    main.o(.text.showdoorstatus) refers to main.o(.bss.dis) for dis
    main.o(.text.showdoorstatus) refers to main.o(.text.clearRow) for clearRow
    main.o(.text.showdoorstatus) refers to main.o(.rodata.str1.1) for .L.str.2
    main.o(.text.showdoorstatus) refers to main.o(.text.displayTextOnLCD) for displayTextOnLCD
    main.o(.ARM.exidx.text.showdoorstatus) refers to main.o(.text.showdoorstatus) for [Anonymous Symbol]
    main.o(.text.ButtonControlTask) refers to main.o(.bss.xMutex) for xMutex
    main.o(.text.ButtonControlTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.ButtonControlTask) refers to main.o(.bss.doorLocked) for doorLocked
    main.o(.text.ButtonControlTask) refers to main.o(.text.toggleDoorLock) for toggleDoorLock
    main.o(.text.ButtonControlTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.ButtonControlTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.ButtonControlTask) refers to main.o(.text.ButtonControlTask) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.initPotentiometer) refers to main.o(.text.initPotentiometer) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.ADC_Read) refers to main.o(.text.ADC_Read) for [Anonymous Symbol]
    main.o(.text.readPotentiometer) refers to main.o(.text.ADC_Read) for ADC_Read
    main.o(.text.readPotentiometer) refers to dflti.o(.text) for __aeabi_i2d
    main.o(.text.readPotentiometer) refers to ddiv.o(.text) for __aeabi_ddiv
    main.o(.text.readPotentiometer) refers to dmul.o(.text) for __aeabi_dmul
    main.o(.text.readPotentiometer) refers to d2f.o(.text) for __aeabi_d2f
    main.o(.text.readPotentiometer) refers to f2d.o(.text) for __aeabi_f2d
    main.o(.text.readPotentiometer) refers to main.o(.bss.speed) for speed
    main.o(.ARM.exidx.text.readPotentiometer) refers to main.o(.text.readPotentiometer) for [Anonymous Symbol]
    main.o(.text.SpeedCheckTask) refers to main.o(.bss.gearReverse) for gearReverse
    main.o(.text.SpeedCheckTask) refers to main.o(.text.readPotentiometer) for readPotentiometer
    main.o(.text.SpeedCheckTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.SpeedCheckTask) refers to main.o(.bss.doorLocked) for doorLocked
    main.o(.text.SpeedCheckTask) refers to main.o(.bss.globalSpeed) for globalSpeed
    main.o(.text.SpeedCheckTask) refers to main.o(.text.toggleDoorLock) for toggleDoorLock
    main.o(.text.SpeedCheckTask) refers to main.o(.bss.xMutex) for xMutex
    main.o(.text.SpeedCheckTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.SpeedCheckTask) refers to f2d.o(.text) for __aeabi_f2d
    main.o(.text.SpeedCheckTask) refers to main.o(.rodata.str1.1) for .L.str.3
    main.o(.text.SpeedCheckTask) refers to printfa.o(i.__0snprintf) for snprintf
    main.o(.text.SpeedCheckTask) refers to main.o(.bss.dis) for dis
    main.o(.text.SpeedCheckTask) refers to main.o(.text.clearRow) for clearRow
    main.o(.text.SpeedCheckTask) refers to main.o(.text.displayTextOnLCD) for displayTextOnLCD
    main.o(.text.SpeedCheckTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.SpeedCheckTask) refers to main.o(.text.SpeedCheckTask) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.initUltrasonicLEDs) refers to main.o(.text.initUltrasonicLEDs) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Delay_MicroSecond) refers to main.o(.text.Delay_MicroSecond) for [Anonymous Symbol]
    main.o(.text.Measure_distance) refers to main.o(.text.Delay_MicroSecond) for Delay_MicroSecond
    main.o(.ARM.exidx.text.Measure_distance) refers to main.o(.text.Measure_distance) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Timer0ACapture_init) refers to main.o(.text.Timer0ACapture_init) for [Anonymous Symbol]
    main.o(.text.controlLEDAndBuzzer) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.controlLEDAndBuzzer) refers to main.o(.text.controlLEDAndBuzzer) for [Anonymous Symbol]
    main.o(.text.UltrasonicTask) refers to main.o(.text.Timer0ACapture_init) for Timer0ACapture_init
    main.o(.text.UltrasonicTask) refers to main.o(.bss.gearReverse) for gearReverse
    main.o(.text.UltrasonicTask) refers to main.o(.text.Measure_distance) for Measure_distance
    main.o(.text.UltrasonicTask) refers to main.o(.bss.time) for time
    main.o(.text.UltrasonicTask) refers to main.o(.bss.distance) for distance
    main.o(.text.UltrasonicTask) refers to main.o(.bss.dis) for dis
    main.o(.text.UltrasonicTask) refers to main.o(.text.clearRow) for clearRow
    main.o(.text.UltrasonicTask) refers to f2d.o(.text) for __aeabi_f2d
    main.o(.text.UltrasonicTask) refers to main.o(.bss.diststr) for diststr
    main.o(.text.UltrasonicTask) refers to main.o(.rodata.str1.1) for .L.str.4
    main.o(.text.UltrasonicTask) refers to printfa.o(i.__0snprintf) for snprintf
    main.o(.text.UltrasonicTask) refers to main.o(.bss.xMutex) for xMutex
    main.o(.text.UltrasonicTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.UltrasonicTask) refers to main.o(.text.displayTextOnLCD) for displayTextOnLCD
    main.o(.text.UltrasonicTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.UltrasonicTask) refers to main.o(.text.controlLEDAndBuzzer) for controlLEDAndBuzzer
    main.o(.text.UltrasonicTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.UltrasonicTask) refers to main.o(.text.UltrasonicTask) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.initIgnitionSwitch) refers to main.o(.text.initIgnitionSwitch) for [Anonymous Symbol]
    main.o(.text.IgnitionMonitorTask) refers to main.o(.bss.ignitionSwitchState) for ignitionSwitchState
    main.o(.text.IgnitionMonitorTask) refers to main.o(.bss.doorLocked) for doorLocked
    main.o(.text.IgnitionMonitorTask) refers to main.o(.bss.globalLock) for globalLock
    main.o(.text.IgnitionMonitorTask) refers to main.o(.bss.xMutex) for xMutex
    main.o(.text.IgnitionMonitorTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.IgnitionMonitorTask) refers to main.o(.text.toggleDoorLock) for toggleDoorLock
    main.o(.text.IgnitionMonitorTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.IgnitionMonitorTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.IgnitionMonitorTask) refers to main.o(.text.IgnitionMonitorTask) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.initDriverDoor) refers to main.o(.text.initDriverDoor) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.isDoorOpen) refers to main.o(.text.isDoorOpen) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.controlBuzzer) refers to main.o(.text.controlBuzzer) for [Anonymous Symbol]
    main.o(.text.VehicleAlertTask) refers to main.o(.text.readPotentiometer) for readPotentiometer
    main.o(.text.VehicleAlertTask) refers to main.o(.text.isDoorOpen) for isDoorOpen
    main.o(.text.VehicleAlertTask) refers to main.o(.text.controlBuzzer) for controlBuzzer
    main.o(.text.VehicleAlertTask) refers to main.o(.bss.xMutex) for xMutex
    main.o(.text.VehicleAlertTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.VehicleAlertTask) refers to main.o(.bss.dis) for dis
    main.o(.text.VehicleAlertTask) refers to main.o(.text.clearRow) for clearRow
    main.o(.text.VehicleAlertTask) refers to main.o(.rodata.str1.1) for .L.str.5
    main.o(.text.VehicleAlertTask) refers to main.o(.text.displayTextOnLCD) for displayTextOnLCD
    main.o(.text.VehicleAlertTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.VehicleAlertTask) refers to main.o(.text.showdoorstatus) for showdoorstatus
    main.o(.text.VehicleAlertTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.VehicleAlertTask) refers to main.o(.text.VehicleAlertTask) for [Anonymous Symbol]
    main.o(.text.main) refers to main.o(.bss.dis) for dis
    main.o(.text.main) refers to main.o(.text.LCDI2CInit) for LCDI2CInit
    main.o(.text.main) refers to main.o(.text.initBuzzer) for initBuzzer
    main.o(.text.main) refers to main.o(.text.initButtons) for initButtons
    main.o(.text.main) refers to main.o(.text.initIgnitionSwitch) for initIgnitionSwitch
    main.o(.text.main) refers to main.o(.text.initUltrasonicLEDs) for initUltrasonicLEDs
    main.o(.text.main) refers to main.o(.text.initGearSwitch) for initGearSwitch
    main.o(.text.main) refers to main.o(.text.initPotentiometer) for initPotentiometer
    main.o(.text.main) refers to main.o(.text.initDriverDoor) for initDriverDoor
    main.o(.text.main) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    main.o(.text.main) refers to main.o(.bss.xMutex) for xMutex
    main.o(.text.main) refers to main.o(.text.ButtonControlTask) for ButtonControlTask
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str.6
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.text.IgnitionMonitorTask) for IgnitionMonitorTask
    main.o(.text.main) refers to main.o(.text.SpeedCheckTask) for SpeedCheckTask
    main.o(.text.main) refers to main.o(.text.UltrasonicTask) for UltrasonicTask
    main.o(.text.main) refers to main.o(.text.GearSwitchTask) for GearSwitchTask
    main.o(.text.main) refers to main.o(.text.VehicleAlertTask) for VehicleAlertTask
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    port_config.o(.ARM.exidx.text.PortA_Config) refers to port_config.o(.text.PortA_Config) for [Anonymous Symbol]
    port_config.o(.ARM.exidx.text.PortC_Config) refers to port_config.o(.text.PortC_Config) for [Anonymous Symbol]
    port_config.o(.ARM.exidx.text.PortF_Config) refers to port_config.o(.text.PortF_Config) for [Anonymous Symbol]
    clib_os.o(.ARM.exidx.text.software_init_hook) refers to clib_os.o(.text.software_init_hook) for [Anonymous Symbol]
    cmsis_os2.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.SysTick_Handler) refers to port.o(.text.xPortSysTickHandler) for xPortSysTickHandler
    cmsis_os2.o(.ARM.exidx.text.SysTick_Handler) refers to cmsis_os2.o(.text.SysTick_Handler) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelInitialize) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelInitialize) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelInitialize) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelInitialize) refers to cmsis_os2.o(.text.osKernelInitialize) for [Anonymous Symbol]
    cmsis_os2.o(.text.IRQ_Context) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.ARM.exidx.text.IRQ_Context) refers to cmsis_os2.o(.text.IRQ_Context) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetInfo) refers to cmsis_os2.o(.rodata.str1.1) for .L.str
    cmsis_os2.o(.text.osKernelGetInfo) refers to memcpya.o(.text) for __aeabi_memcpy
    cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo) refers to cmsis_os2.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetState) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelGetState) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelGetState) refers to cmsis_os2.o(.text.osKernelGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelStart) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelStart) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    cmsis_os2.o(.ARM.exidx.text.osKernelStart) refers to cmsis_os2.o(.text.osKernelStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelLock) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelLock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelLock) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.ARM.exidx.text.osKernelLock) refers to cmsis_os2.o(.text.osKernelLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelUnlock) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelUnlock) refers to cmsis_os2.o(.text.osKernelUnlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelRestoreLock) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock) refers to cmsis_os2.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetTickCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetTickCountFromISR) for xTaskGetTickCountFromISR
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount) refers to cmsis_os2.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq) refers to cmsis_os2.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to cmsis_os2.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerFreq) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to cmsis_os2.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    cmsis_os2.o(.ARM.exidx.text.osThreadNew) refers to cmsis_os2.o(.text.osThreadNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetName) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetName) refers to tasks.o(.text.pcTaskGetName) for pcTaskGetName
    cmsis_os2.o(.ARM.exidx.text.osThreadGetName) refers to cmsis_os2.o(.text.osThreadGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetId) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.ARM.exidx.text.osThreadGetId) refers to cmsis_os2.o(.text.osThreadGetId) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetState) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetState) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.ARM.exidx.text.osThreadGetState) refers to cmsis_os2.o(.text.osThreadGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for uxTaskGetStackHighWaterMark
    cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace) refers to cmsis_os2.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSetPriority) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadSetPriority) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority) refers to cmsis_os2.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetPriority) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetPriority) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority) refers to cmsis_os2.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadYield) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.ARM.exidx.text.osThreadYield) refers to cmsis_os2.o(.text.osThreadYield) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSuspend) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadSuspend) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    cmsis_os2.o(.ARM.exidx.text.osThreadSuspend) refers to cmsis_os2.o(.text.osThreadSuspend) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadResume) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadResume) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.text.osThreadResume) refers to tasks.o(.text.vTaskResume) for vTaskResume
    cmsis_os2.o(.text.osThreadResume) refers to tasks.o(.text.xTaskAbortDelay) for xTaskAbortDelay
    cmsis_os2.o(.ARM.exidx.text.osThreadResume) refers to cmsis_os2.o(.text.osThreadResume) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadExit) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadExit) refers to cmsis_os2.o(.text.osThreadExit) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadTerminate) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadTerminate) refers to cmsis_os2.o(.text.osThreadTerminate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetCount) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.ARM.exidx.text.osThreadGetCount) refers to cmsis_os2.o(.text.osThreadGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadEnumerate) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.uxTaskGetSystemState) for uxTaskGetSystemState
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate) refers to cmsis_os2.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsSet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet) refers to cmsis_os2.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsClear) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear) refers to cmsis_os2.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsGet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet) refers to cmsis_os2.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsWait) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait) refers to cmsis_os2.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelay) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osDelay) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    cmsis_os2.o(.ARM.exidx.text.osDelay) refers to cmsis_os2.o(.text.osDelay) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelayUntil) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    cmsis_os2.o(.ARM.exidx.text.osDelayUntil) refers to cmsis_os2.o(.text.osDelayUntil) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerNew) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.text.TimerCallback) for TimerCallback
    cmsis_os2.o(.text.osTimerNew) refers to timers.o(.text.xTimerCreateStatic) for xTimerCreateStatic
    cmsis_os2.o(.text.osTimerNew) refers to timers.o(.text.xTimerCreate) for xTimerCreate
    cmsis_os2.o(.text.osTimerNew) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerNew) refers to cmsis_os2.o(.text.osTimerNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.TimerCallback) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.ARM.exidx.text.TimerCallback) refers to cmsis_os2.o(.text.TimerCallback) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerGetName) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerGetName) refers to timers.o(.text.pcTimerGetName) for pcTimerGetName
    cmsis_os2.o(.ARM.exidx.text.osTimerGetName) refers to cmsis_os2.o(.text.osTimerGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStart) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerStart) refers to timers.o(.text.xTimerGenericCommandFromTask) for xTimerGenericCommandFromTask
    cmsis_os2.o(.ARM.exidx.text.osTimerStart) refers to cmsis_os2.o(.text.osTimerStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStop) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerStop) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.text.osTimerStop) refers to timers.o(.text.xTimerGenericCommandFromTask) for xTimerGenericCommandFromTask
    cmsis_os2.o(.ARM.exidx.text.osTimerStop) refers to cmsis_os2.o(.text.osTimerStop) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerIsRunning) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerIsRunning) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning) refers to cmsis_os2.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerDelete) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.text.osTimerDelete) refers to timers.o(.text.xTimerGenericCommandFromTask) for xTimerGenericCommandFromTask
    cmsis_os2.o(.text.osTimerDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerDelete) refers to cmsis_os2.o(.text.osTimerDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreateStatic) for xEventGroupCreateStatic
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreate) for xEventGroupCreate
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew) refers to cmsis_os2.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsSet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for xEventGroupSetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet) refers to cmsis_os2.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsClear) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for xEventGroupClearBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear) refers to cmsis_os2.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsGet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet) refers to cmsis_os2.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsWait) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsWait) refers to event_groups.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait) refers to cmsis_os2.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsDelete) refers to event_groups.o(.text.vEventGroupDelete) for vEventGroupDelete
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete) refers to cmsis_os2.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    cmsis_os2.o(.ARM.exidx.text.osMutexNew) refers to cmsis_os2.o(.text.osMutexNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexAcquire) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueTakeMutexRecursive) for xQueueTakeMutexRecursive
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.ARM.exidx.text.osMutexAcquire) refers to cmsis_os2.o(.text.osMutexAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexRelease) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGiveMutexRecursive) for xQueueGiveMutexRecursive
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMutexRelease) refers to cmsis_os2.o(.text.osMutexRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexGetOwner) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexGetOwner) refers to queue.o(.text.xQueueGetMutexHolder) for xQueueGetMutexHolder
    cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner) refers to cmsis_os2.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMutexDelete) refers to cmsis_os2.o(.text.osMutexDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphore) for xQueueCreateCountingSemaphore
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew) refers to cmsis_os2.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire) refers to cmsis_os2.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreRelease) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease) refers to cmsis_os2.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount) refers to cmsis_os2.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete) refers to cmsis_os2.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew) refers to cmsis_os2.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueuePut) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut) refers to cmsis_os2.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet) refers to cmsis_os2.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetCapacity) refers to queue.o(.text.uxQueueGetQueueLength) for uxQueueGetQueueLength
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to cmsis_os2.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetMsgSize) refers to queue.o(.text.uxQueueGetQueueItemSize) for uxQueueGetQueueItemSize
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to cmsis_os2.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount) refers to cmsis_os2.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to queue.o(.text.uxQueueGetQueueLength) for uxQueueGetQueueLength
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to queue.o(.text.uxQueueSpacesAvailable) for uxQueueSpacesAvailable
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueReset) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueReset) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset) refers to cmsis_os2.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete) refers to cmsis_os2.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osMemoryPoolNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew) refers to cmsis_os2.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetName) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName) refers to cmsis_os2.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.AllocBlock) for AllocBlock
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.CreateBlock) for CreateBlock
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.AllocBlock) refers to cmsis_os2.o(.text.AllocBlock) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.CreateBlock) refers to cmsis_os2.o(.text.CreateBlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.FreeBlock) for FreeBlock
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.FreeBlock) refers to cmsis_os2.o(.text.FreeBlock) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to cmsis_os2.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to cmsis_os2.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete) refers to cmsis_os2.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text.ITM_SendChar) refers to retarget_io.o(.text.ITM_SendChar) for [Anonymous Symbol]
    retarget_io.o(.text.ITM_ReceiveChar) refers to retarget_io.o(.data.ITM_RxBuffer) for ITM_RxBuffer
    retarget_io.o(.ARM.exidx.text.ITM_ReceiveChar) refers to retarget_io.o(.text.ITM_ReceiveChar) for [Anonymous Symbol]
    retarget_io.o(.text.fputc) refers to stdout.o(.data) for __stdout
    retarget_io.o(.text.fputc) refers to retarget_io.o(.text.stdout_putchar) for stdout_putchar
    retarget_io.o(.ARM.exidx.text.fputc) refers to retarget_io.o(.text.fputc) for [Anonymous Symbol]
    retarget_io.o(.text.stdout_putchar) refers to retarget_io.o(.text.ITM_SendChar) for ITM_SendChar
    retarget_io.o(.ARM.exidx.text.stdout_putchar) refers to retarget_io.o(.text.stdout_putchar) for [Anonymous Symbol]
    retarget_io.o(.text.fgetc) refers to stdin.o(.data) for __stdin
    retarget_io.o(.text.fgetc) refers to retarget_io.o(.bss.getchar_undo) for getchar_undo
    retarget_io.o(.text.fgetc) refers to retarget_io.o(.data.getchar_ch) for getchar_ch
    retarget_io.o(.text.fgetc) refers to retarget_io.o(.text.stdin_getchar) for stdin_getchar
    retarget_io.o(.ARM.exidx.text.fgetc) refers to retarget_io.o(.text.fgetc) for [Anonymous Symbol]
    retarget_io.o(.text.stdin_getchar) refers to retarget_io.o(.text.ITM_ReceiveChar) for ITM_ReceiveChar
    retarget_io.o(.ARM.exidx.text.stdin_getchar) refers to retarget_io.o(.text.stdin_getchar) for [Anonymous Symbol]
    retarget_io.o(.text.__backspace) refers to stdin.o(.data) for __stdin
    retarget_io.o(.text.__backspace) refers to retarget_io.o(.data.getchar_ch) for getchar_ch
    retarget_io.o(.text.__backspace) refers to retarget_io.o(.bss.getchar_undo) for getchar_undo
    retarget_io.o(.ARM.exidx.text.__backspace) refers to retarget_io.o(.text.__backspace) for [Anonymous Symbol]
    retarget_io.o(.text.__aeabi_assert) refers to retarget_io.o(.rodata.str1.1) for .L.str
    retarget_io.o(.text.__aeabi_assert) refers to stderr.o(.data) for __stderr
    retarget_io.o(.text.__aeabi_assert) refers to fputs.o(i.fputs) for fputs
    retarget_io.o(.text.__aeabi_assert) refers to retarget_io.o(.text.abort) for abort
    retarget_io.o(.ARM.exidx.text.__aeabi_assert) refers to retarget_io.o(.text.__aeabi_assert) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text.abort) refers to retarget_io.o(.text.abort) for [Anonymous Symbol]
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to cmsis_os2.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.getOscClk) for getOscClk
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.getOscClk) refers to system_tm4c123.o(.text.getOscClk) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreateStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic) refers to event_groups.o(.text.xEventGroupCreateStatic) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to event_groups.o(.text.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.prvTestWaitCondition) refers to event_groups.o(.text.prvTestWaitCondition) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for vEventGroupClearBitsCallback
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.vEventGroupDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetStaticBuffer) refers to event_groups.o(.text.xEventGroupGetStaticBuffer) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for vEventGroupSetBitsCallback
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.xPortSysTickHandler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.xPortSysTickHandler) refers to port.o(.text.xPortSysTickHandler) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.pvPortCalloc) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    heap_4.o(.text.pvPortCalloc) refers to memseta.o(.text) for __aeabi_memclr
    heap_4.o(.ARM.exidx.text.pvPortCalloc) refers to heap_4.o(.text.pvPortCalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    heap_4.o(.text.vPortHeapResetState) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortHeapResetState) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortHeapResetState) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortHeapResetState) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortHeapResetState) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.ARM.exidx.text.vPortHeapResetState) refers to heap_4.o(.text.vPortHeapResetState) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreateStatic) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreateStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGenericGetStaticBuffers) refers to queue.o(.text.xQueueGenericGetStaticBuffers) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    queue.o(.text.xQueueCreateMutexStatic) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueCreateMutexStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphoreStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueItemSize) refers to queue.o(.text.uxQueueGetQueueItemSize) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueLength) refers to queue.o(.text.uxQueueGetQueueLength) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvCreateStaticTask) for prvCreateStaticTask
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreateStatic) refers to tasks.o(.text.xTaskCreateStatic) for [Anonymous Symbol]
    tasks.o(.text.prvCreateStaticTask) refers to memseta.o(.text) for __aeabi_memclr
    tasks.o(.text.prvCreateStaticTask) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.ARM.exidx.text.prvCreateStaticTask) refers to tasks.o(.text.prvCreateStaticTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvCreateTask) for prvCreateTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvCreateTask) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.prvCreateTask) refers to memseta.o(.text) for __aeabi_memclr
    tasks.o(.text.prvCreateTask) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.prvCreateTask) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.ARM.exidx.text.prvCreateTask) refers to tasks.o(.text.prvCreateTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskBasePriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskBasePriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskBasePriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskBasePriorityGet) refers to tasks.o(.text.uxTaskBasePriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskBasePriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskBasePriorityGetFromISR) refers to tasks.o(.text.uxTaskBasePriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSwitchContext) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvCreateIdleTasks) for prvCreateIdleTasks
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvCreateIdleTasks) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.prvCreateIdleTasks) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.prvCreateIdleTasks) refers to tasks.o(.text.vApplicationGetIdleTaskMemory) for vApplicationGetIdleTaskMemory
    tasks.o(.text.prvCreateIdleTasks) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    tasks.o(.text.prvCreateIdleTasks) refers to tasks.o(.bss.xIdleTaskHandles) for xIdleTaskHandles
    tasks.o(.ARM.exidx.text.prvCreateIdleTasks) refers to tasks.o(.text.prvCreateIdleTasks) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for xTimerGetTimerDaemonTaskHandle
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xIdleTaskHandles) for xIdleTaskHandles
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetStaticBuffers) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetStaticBuffers) refers to tasks.o(.text.xTaskGetStaticBuffers) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.xTaskAbortDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskAbortDelay) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGetInfo) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandleForCore) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandleForCore) refers to tasks.o(.text.xTaskGetCurrentTaskHandleForCore) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.vApplicationGetIdleTaskMemory) refers to tasks.o(.bss.vApplicationGetIdleTaskMemory.xIdleTaskTCB) for vApplicationGetIdleTaskMemory.xIdleTaskTCB
    tasks.o(.text.vApplicationGetIdleTaskMemory) refers to tasks.o(.bss.vApplicationGetIdleTaskMemory.uxIdleTaskStack) for vApplicationGetIdleTaskMemory.uxIdleTaskStack
    tasks.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory) refers to tasks.o(.text.vApplicationGetIdleTaskMemory) for [Anonymous Symbol]
    tasks.o(.text.vApplicationGetTimerTaskMemory) refers to tasks.o(.bss.vApplicationGetTimerTaskMemory.xTimerTaskTCB) for vApplicationGetTimerTaskMemory.xTimerTaskTCB
    tasks.o(.text.vApplicationGetTimerTaskMemory) refers to tasks.o(.bss.vApplicationGetTimerTaskMemory.uxTimerTaskStack) for vApplicationGetTimerTaskMemory.uxTimerTaskStack
    tasks.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory) refers to tasks.o(.text.vApplicationGetTimerTaskMemory) for [Anonymous Symbol]
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskResetState) refers to tasks.o(.text.vTaskResetState) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to memseta.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.vApplicationGetTimerTaskMemory) for vApplicationGetTimerTaskMemory
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.rodata.str1.1) for .L.str
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage) for prvCheckForValidListAndQueue.ucStaticTimerQueueStorage
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue) for prvCheckForValidListAndQueue.xStaticTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateStatic) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreateStatic) refers to timers.o(.text.xTimerCreateStatic) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommandFromTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommandFromTask) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommandFromTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerGenericCommandFromTask) refers to timers.o(.text.xTimerGenericCommandFromTask) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommandFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommandFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerGenericCommandFromISR) refers to timers.o(.text.xTimerGenericCommandFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for xTimerGetReloadMode
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetStaticBuffer) refers to timers.o(.text.xTimerGetStaticBuffer) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.vTimerResetState) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.vTimerResetState) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.vTimerResetState) refers to timers.o(.text.vTimerResetState) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessReceivedCommands) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvReloadTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.ARM.exidx.text.prvReloadTimer) refers to timers.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    gpio.o(i.GPIOIntRegister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntRegisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntUnregister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOIntUnregisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOPinConfigure) refers to gpio.o(.constdata) for .constdata
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i._GPIOIntNumberGet) refers to gpio.o(.constdata) for .constdata
    i2c.o(i.I2CIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    i2c.o(i.I2CIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    i2c.o(i.I2CIntRegister) refers to i2c.o(.constdata) for .constdata
    i2c.o(i.I2CIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    i2c.o(i.I2CIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    i2c.o(i.I2CIntUnregister) refers to i2c.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockFreqSet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockGet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockSet) refers to sysctl.o(.emb_text) for SysCtlDelay
    sysctl.o(i.SysCtlDeepSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    sysctl.o(i.SysCtlSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlVCOGet) refers to sysctl.o(.constdata) for .constdata
    interrupt.o(i.IntDisable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntEnable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntIsEnabled) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntMasterDisable) refers to cpu.o(.emb_text) for CPUcpsid
    interrupt.o(i.IntMasterEnable) refers to cpu.o(.emb_text) for CPUcpsie
    interrupt.o(i.IntPendClear) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPendSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityMaskGet) refers to cpu.o(.emb_text) for CPUbasepriGet
    interrupt.o(i.IntPriorityMaskSet) refers to cpu.o(.emb_text) for CPUbasepriSet
    interrupt.o(i.IntPrioritySet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntRegister) refers to interrupt.o(vtable) for vtable
    interrupt.o(i.IntUnregister) refers to interrupt.o(i._IntDefaultHandler) for _IntDefaultHandler
    interrupt.o(i.IntUnregister) refers to interrupt.o(vtable) for vtable
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    fputs.o(i.fputs) refers to retarget_io.o(.text.fputc) for fputc
    fputs_e.o(.text) refers to retarget_io.o(.text.fputc) for fputc
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to retarget_io.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to retarget_io.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to retarget_io.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to retarget_io.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dflti.o(.text) refers to depilogue.o(.text) for _double_epilogue
    f2d.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers to fepilogue.o(.text) for _float_round
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_tm4c123.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_tm4c123.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    fepilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.Delay), (8 bytes).
    Removing main.o(.ARM.exidx.text.initBuzzer), (8 bytes).
    Removing main.o(.ARM.exidx.text.initGearSwitch), (8 bytes).
    Removing main.o(.ARM.exidx.text.gearreverseon), (8 bytes).
    Removing main.o(.ARM.exidx.text.gearreverseoff), (8 bytes).
    Removing main.o(.ARM.exidx.text.GearSwitchTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.I2C_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.I2CSendByte), (8 bytes).
    Removing main.o(.ARM.exidx.text.expanderWrite), (8 bytes).
    Removing main.o(.ARM.exidx.text.pulseEnable), (8 bytes).
    Removing main.o(.ARM.exidx.text.write4bits), (8 bytes).
    Removing main.o(.ARM.exidx.text.send), (8 bytes).
    Removing main.o(.ARM.exidx.text.command), (8 bytes).
    Removing main.o(.ARM.exidx.text.write), (8 bytes).
    Removing main.o(.ARM.exidx.text.write_string), (8 bytes).
    Removing main.o(.text.display), (32 bytes).
    Removing main.o(.ARM.exidx.text.display), (8 bytes).
    Removing main.o(.text.configDisplay), (32 bytes).
    Removing main.o(.ARM.exidx.text.configDisplay), (8 bytes).
    Removing main.o(.ARM.exidx.text.clear), (8 bytes).
    Removing main.o(.ARM.exidx.text.home), (8 bytes).
    Removing main.o(.ARM.exidx.text.begin), (8 bytes).
    Removing main.o(.ARM.exidx.text.LCDI2CInit), (8 bytes).
    Removing main.o(.ARM.exidx.text.setCursor), (8 bytes).
    Removing main.o(.text.noCursor), (32 bytes).
    Removing main.o(.ARM.exidx.text.noCursor), (8 bytes).
    Removing main.o(.text.backlight), (24 bytes).
    Removing main.o(.ARM.exidx.text.backlight), (8 bytes).
    Removing main.o(.text.scrollDisplayRight), (18 bytes).
    Removing main.o(.ARM.exidx.text.scrollDisplayRight), (8 bytes).
    Removing main.o(.text.noDisplay), (32 bytes).
    Removing main.o(.ARM.exidx.text.noDisplay), (8 bytes).
    Removing main.o(.text.printChar), (24 bytes).
    Removing main.o(.ARM.exidx.text.printChar), (8 bytes).
    Removing main.o(.ARM.exidx.text.print), (8 bytes).
    Removing main.o(.ARM.exidx.text.clearRow), (8 bytes).
    Removing main.o(.ARM.exidx.text.displayTextOnLCD), (8 bytes).
    Removing main.o(.ARM.exidx.text.initButtons), (8 bytes).
    Removing main.o(.ARM.exidx.text.toggleDoorLock), (8 bytes).
    Removing main.o(.ARM.exidx.text.showdoorstatus), (8 bytes).
    Removing main.o(.ARM.exidx.text.ButtonControlTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.initPotentiometer), (8 bytes).
    Removing main.o(.ARM.exidx.text.ADC_Read), (8 bytes).
    Removing main.o(.ARM.exidx.text.readPotentiometer), (8 bytes).
    Removing main.o(.ARM.exidx.text.SpeedCheckTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.initUltrasonicLEDs), (8 bytes).
    Removing main.o(.ARM.exidx.text.Delay_MicroSecond), (8 bytes).
    Removing main.o(.ARM.exidx.text.Measure_distance), (8 bytes).
    Removing main.o(.ARM.exidx.text.Timer0ACapture_init), (8 bytes).
    Removing main.o(.ARM.exidx.text.controlLEDAndBuzzer), (8 bytes).
    Removing main.o(.ARM.exidx.text.UltrasonicTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.initIgnitionSwitch), (8 bytes).
    Removing main.o(.ARM.exidx.text.IgnitionMonitorTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.initDriverDoor), (8 bytes).
    Removing main.o(.ARM.exidx.text.isDoorOpen), (8 bytes).
    Removing main.o(.ARM.exidx.text.controlBuzzer), (8 bytes).
    Removing main.o(.ARM.exidx.text.VehicleAlertTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.rodata.cst16), (16 bytes).
    Removing main.o(.bss.xBinarySemaphore), (4 bytes).
    Removing main.o(.bss.speedStr), (20 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing port_config.o(.text), (0 bytes).
    Removing port_config.o(.text.PortA_Config), (58 bytes).
    Removing port_config.o(.ARM.exidx.text.PortA_Config), (8 bytes).
    Removing port_config.o(.text.PortC_Config), (50 bytes).
    Removing port_config.o(.ARM.exidx.text.PortC_Config), (8 bytes).
    Removing port_config.o(.text.PortF_Config), (76 bytes).
    Removing port_config.o(.ARM.exidx.text.PortF_Config), (8 bytes).
    Removing clib_os.o(.text), (0 bytes).
    Removing clib_os.o(.text.software_init_hook), (2 bytes).
    Removing clib_os.o(.ARM.exidx.text.software_init_hook), (8 bytes).
    Removing cmsis_os2.o(.text), (0 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelInitialize), (82 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing cmsis_os2.o(.text.IRQ_Context), (80 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.IRQ_Context), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetInfo), (84 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetState), (82 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelStart), (88 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelLock), (82 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelUnlock), (106 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelRestoreLock), (132 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickCount), (34 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickFreq), (6 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerCount), (126 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerFreq), (12 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadNew), (348 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetName), (58 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetId), (16 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetState), (94 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetStackSpace), (48 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSetPriority), (82 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetPriority), (50 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadYield), (54 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSuspend), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadResume), (110 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadExit), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadTerminate), (90 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetCount), (32 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadEnumerate), (176 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsSet), (184 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsClear), (134 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsGet), (66 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsWait), (354 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osDelay), (48 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing cmsis_os2.o(.text.osDelayUntil), (96 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerNew), (376 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing cmsis_os2.o(.text.TimerCallback), (42 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.TimerCallback), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerGetName), (58 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStart), (94 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStop), (106 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerIsRunning), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerDelete), (120 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsNew), (130 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsSet), (144 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsClear), (120 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsGet), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsWait), (234 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexNew), (254 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexAcquire), (154 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexRelease), (122 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexGetOwner), (50 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexDelete), (64 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreNew), (268 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreAcquire), (168 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreRelease), (138 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreGetCount), (58 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueNew), (214 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueuePut), (198 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGet), (194 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCapacity), (38 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetMsgSize), (38 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCount), (58 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetSpace), (110 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueReset), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolNew), (436 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetName), (54 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolAlloc), (250 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing cmsis_os2.o(.text.AllocBlock), (38 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.AllocBlock), (8 bytes).
    Removing cmsis_os2.o(.text.CreateBlock), (50 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.CreateBlock), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolFree), (308 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing cmsis_os2.o(.text.FreeBlock), (28 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.FreeBlock), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCapacity), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetBlockSize), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCount), (98 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetSpace), (88 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolDelete), (152 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing cmsis_os2.o(.bss.KernelState), (4 bytes).
    Removing cmsis_os2.o(.rodata.str1.1), (17 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.text.OS_Tick_Setup), (126 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Enable), (60 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (64 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_AcknowledgeIRQ), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetIRQn), (6 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (52 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing os_systick.o(.bss.os), (1 bytes).
    Removing retarget_io.o(.text), (0 bytes).
    Removing retarget_io.o(.text.ITM_SendChar), (66 bytes).
    Removing retarget_io.o(.ARM.exidx.text.ITM_SendChar), (8 bytes).
    Removing retarget_io.o(.text.ITM_ReceiveChar), (62 bytes).
    Removing retarget_io.o(.ARM.exidx.text.ITM_ReceiveChar), (8 bytes).
    Removing retarget_io.o(.text.fputc), (48 bytes).
    Removing retarget_io.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing retarget_io.o(.text.stdout_putchar), (16 bytes).
    Removing retarget_io.o(.ARM.exidx.text.stdout_putchar), (8 bytes).
    Removing retarget_io.o(.text.fgetc), (110 bytes).
    Removing retarget_io.o(.ARM.exidx.text.fgetc), (8 bytes).
    Removing retarget_io.o(.text.stdin_getchar), (30 bytes).
    Removing retarget_io.o(.ARM.exidx.text.stdin_getchar), (8 bytes).
    Removing retarget_io.o(.text.__backspace), (76 bytes).
    Removing retarget_io.o(.ARM.exidx.text.__backspace), (8 bytes).
    Removing retarget_io.o(.text.__aeabi_assert), (188 bytes).
    Removing retarget_io.o(.ARM.exidx.text.__aeabi_assert), (8 bytes).
    Removing retarget_io.o(.text.abort), (4 bytes).
    Removing retarget_io.o(.ARM.exidx.text.abort), (8 bytes).
    Removing retarget_io.o(.data.ITM_RxBuffer), (4 bytes).
    Removing retarget_io.o(.bss.getchar_undo), (4 bytes).
    Removing retarget_io.o(.data.getchar_ch), (4 bytes).
    Removing retarget_io.o(.rodata.str1.1), (39 bytes).
    Removing startup_tm4c123.o(HEAP), (0 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (326 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.text.getOscClk), (360 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.getOscClk), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.text.xEventGroupCreateStatic), (46 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic), (8 bytes).
    Removing event_groups.o(.text.xEventGroupCreate), (50 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (246 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBits), (224 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupWaitBits), (300 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.text.prvTestWaitCondition), (66 bytes).
    Removing event_groups.o(.ARM.exidx.text.prvTestWaitCondition), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (42 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBitsFromISR), (34 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (58 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (70 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetStaticBuffer), (44 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetStaticBuffer), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetBitsCallback), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBitsFromISR), (36 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (34 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (16 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.text.vListInsertEnd), (58 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (2 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortSysTickHandler), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.pvPortCalloc), (92 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (206 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing heap_4.o(.text.vPortHeapResetState), (54 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortHeapResetState), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreateStatic), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericGetStaticBuffers), (64 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericGetStaticBuffers), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutexStatic), (50 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutexStatic), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (46 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (32 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (80 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (82 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphoreStatic), (76 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (214 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (198 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (342 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (204 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (96 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (34 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (20 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (34 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (16 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (14 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueItemSize), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueItemSize), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueLength), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueLength), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (40 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreateStatic), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCreateStaticTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCreateTask), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (276 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (186 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (276 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (84 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskBasePriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskBasePriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskBasePriorityGetFromISR), (84 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskBasePriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (472 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (296 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (264 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (124 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (296 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCreateIdleTasks), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (96 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskGetStaticBuffers), (116 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetStaticBuffers), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (282 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (106 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.text.xTaskAbortDelay), (266 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskAbortDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (104 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (324 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (308 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandleForCore), (60 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandleForCore), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (268 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (300 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (464 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (572 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (438 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (92 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory), (8 bytes).
    Removing tasks.o(.text.vTaskResetState), (160 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResetState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (74 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (82 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerCreateStatic), (74 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateStatic), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommandFromTask), (124 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommandFromTask), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommandFromISR), (88 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommandFromISR), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (12 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (16 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (62 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (50 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (20 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (20 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.xTimerGetStaticBuffer), (48 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetStaticBuffer), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (16 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (48 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (30 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (30 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (58 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (58 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (12 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (16 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerResetState), (24 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerResetState), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).
    Removing gpio.o(i.GPIOADCTriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIOADCTriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODMATriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIODMATriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODirModeGet), (34 bytes).
    Removing gpio.o(i.GPIOIntClear), (6 bytes).
    Removing gpio.o(i.GPIOIntDisable), (14 bytes).
    Removing gpio.o(i.GPIOIntEnable), (12 bytes).
    Removing gpio.o(i.GPIOIntRegister), (26 bytes).
    Removing gpio.o(i.GPIOIntRegisterPin), (30 bytes).
    Removing gpio.o(i.GPIOIntStatus), (14 bytes).
    Removing gpio.o(i.GPIOIntTypeGet), (70 bytes).
    Removing gpio.o(i.GPIOIntTypeSet), (80 bytes).
    Removing gpio.o(i.GPIOIntUnregister), (22 bytes).
    Removing gpio.o(i.GPIOIntUnregisterPin), (26 bytes).
    Removing gpio.o(i.GPIOPadConfigGet), (248 bytes).
    Removing gpio.o(i.GPIOPinRead), (6 bytes).
    Removing gpio.o(i.GPIOPinTypeADC), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeCAN), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparator), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparatorOutput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeDIVSCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEPI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetLED), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetMII), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOInput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOOutput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOOutputOD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeHibernateRTCCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeLCD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeOneWire), (28 bytes).
    Removing gpio.o(i.GPIOPinTypePWM), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeQEI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeSSI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTimer), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTrace), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUART), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBAnalog), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBDigital), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeHigh), (30 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeLow), (30 bytes).
    Removing gpio.o(i.GPIOPinWakeStatus), (6 bytes).
    Removing gpio.o(i.GPIOPinWrite), (6 bytes).
    Removing gpio.o(i.GPIOUnlockPin), (24 bytes).
    Removing gpio.o(i._GPIOIntNumberGet), (80 bytes).
    Removing i2c.o(i.I2CFIFODataGet), (16 bytes).
    Removing i2c.o(i.I2CFIFODataGetNonBlocking), (24 bytes).
    Removing i2c.o(i.I2CFIFODataPut), (16 bytes).
    Removing i2c.o(i.I2CFIFODataPutNonBlocking), (20 bytes).
    Removing i2c.o(i.I2CFIFOStatus), (6 bytes).
    Removing i2c.o(i.I2CIntRegister), (96 bytes).
    Removing i2c.o(i.I2CIntUnregister), (96 bytes).
    Removing i2c.o(i.I2CLoopbackEnable), (10 bytes).
    Removing i2c.o(i.I2CMasterBurstCountGet), (4 bytes).
    Removing i2c.o(i.I2CMasterBurstLengthSet), (4 bytes).
    Removing i2c.o(i.I2CMasterBusBusy), (12 bytes).
    Removing i2c.o(i.I2CMasterDataGet), (4 bytes).
    Removing i2c.o(i.I2CMasterDisable), (10 bytes).
    Removing i2c.o(i.I2CMasterEnable), (10 bytes).
    Removing i2c.o(i.I2CMasterErr), (24 bytes).
    Removing i2c.o(i.I2CMasterGlitchFilterConfigSet), (84 bytes).
    Removing i2c.o(i.I2CMasterIntClear), (8 bytes).
    Removing i2c.o(i.I2CMasterIntClearEx), (4 bytes).
    Removing i2c.o(i.I2CMasterIntDisable), (6 bytes).
    Removing i2c.o(i.I2CMasterIntDisableEx), (10 bytes).
    Removing i2c.o(i.I2CMasterIntEnable), (6 bytes).
    Removing i2c.o(i.I2CMasterIntEnableEx), (8 bytes).
    Removing i2c.o(i.I2CMasterIntStatus), (24 bytes).
    Removing i2c.o(i.I2CMasterIntStatusEx), (10 bytes).
    Removing i2c.o(i.I2CMasterLineStateGet), (4 bytes).
    Removing i2c.o(i.I2CMasterTimeoutSet), (4 bytes).
    Removing i2c.o(i.I2CRxFIFOConfigSet), (22 bytes).
    Removing i2c.o(i.I2CRxFIFOFlush), (14 bytes).
    Removing i2c.o(i.I2CSlaveACKOverride), (22 bytes).
    Removing i2c.o(i.I2CSlaveACKValueSet), (22 bytes).
    Removing i2c.o(i.I2CSlaveAddressSet), (24 bytes).
    Removing i2c.o(i.I2CSlaveDataGet), (6 bytes).
    Removing i2c.o(i.I2CSlaveDataPut), (6 bytes).
    Removing i2c.o(i.I2CSlaveDisable), (16 bytes).
    Removing i2c.o(i.I2CSlaveEnable), (16 bytes).
    Removing i2c.o(i.I2CSlaveFIFODisable), (8 bytes).
    Removing i2c.o(i.I2CSlaveFIFOEnable), (10 bytes).
    Removing i2c.o(i.I2CSlaveInit), (20 bytes).
    Removing i2c.o(i.I2CSlaveIntClear), (8 bytes).
    Removing i2c.o(i.I2CSlaveIntClearEx), (6 bytes).
    Removing i2c.o(i.I2CSlaveIntDisable), (14 bytes).
    Removing i2c.o(i.I2CSlaveIntDisableEx), (14 bytes).
    Removing i2c.o(i.I2CSlaveIntEnable), (14 bytes).
    Removing i2c.o(i.I2CSlaveIntEnableEx), (12 bytes).
    Removing i2c.o(i.I2CSlaveIntStatus), (28 bytes).
    Removing i2c.o(i.I2CSlaveIntStatusEx), (14 bytes).
    Removing i2c.o(i.I2CSlaveStatus), (6 bytes).
    Removing i2c.o(i.I2CTxFIFOConfigSet), (24 bytes).
    Removing i2c.o(i.I2CTxFIFOFlush), (14 bytes).
    Removing i2c.o(.constdata), (128 bytes).
    Removing sysctl.o(.emb_text), (6 bytes).
    Removing sysctl.o(i.SysCtlAltClkConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlClockFreqSet), (740 bytes).
    Removing sysctl.o(i.SysCtlClockOutConfig), (20 bytes).
    Removing sysctl.o(i.SysCtlClockSet), (288 bytes).
    Removing sysctl.o(i.SysCtlDeepSleep), (32 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockConfigSet), (112 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockSet), (12 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlFlashSectorSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlFlashSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBDisable), (28 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBEnable), (24 bytes).
    Removing sysctl.o(i.SysCtlIntClear), (12 bytes).
    Removing sysctl.o(i.SysCtlIntDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntRegister), (20 bytes).
    Removing sysctl.o(i.SysCtlIntStatus), (16 bytes).
    Removing sysctl.o(i.SysCtlIntUnregister), (18 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlMOSCConfigSet), (12 bytes).
    Removing sysctl.o(i.SysCtlNMIClear), (16 bytes).
    Removing sysctl.o(i.SysCtlNMIStatus), (12 bytes).
    Removing sysctl.o(i.SysCtlPIOSCCalibrate), (76 bytes).
    Removing sysctl.o(i.SysCtlPWMClockGet), (24 bytes).
    Removing sysctl.o(i.SysCtlPWMClockSet), (20 bytes).
    Removing sysctl.o(i.SysCtlPeripheralClockGating), (68 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOff), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOn), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPresent), (44 bytes).
    Removing sysctl.o(i.SysCtlPeripheralReady), (44 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlReset), (16 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorGet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorSet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetCauseClear), (16 bytes).
    Removing sysctl.o(i.SysCtlResetCauseGet), (12 bytes).
    Removing sysctl.o(i.SysCtlSRAMSizeGet), (16 bytes).
    Removing sysctl.o(i.SysCtlSleep), (4 bytes).
    Removing sysctl.o(i.SysCtlSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlVCOGet), (120 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventClear), (16 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventStatus), (12 bytes).
    Removing cpu.o(.emb_text), (38 bytes).
    Removing interrupt.o(i.IntDisable), (100 bytes).
    Removing interrupt.o(i.IntEnable), (100 bytes).
    Removing interrupt.o(i.IntIsEnabled), (96 bytes).
    Removing interrupt.o(i.IntMasterDisable), (14 bytes).
    Removing interrupt.o(i.IntMasterEnable), (14 bytes).
    Removing interrupt.o(i.IntPendClear), (68 bytes).
    Removing interrupt.o(i.IntPendSet), (84 bytes).
    Removing interrupt.o(i.IntPriorityGet), (28 bytes).
    Removing interrupt.o(i.IntPriorityGroupingGet), (36 bytes).
    Removing interrupt.o(i.IntPriorityGroupingSet), (28 bytes).
    Removing interrupt.o(i.IntPriorityMaskGet), (4 bytes).
    Removing interrupt.o(i.IntPriorityMaskSet), (4 bytes).
    Removing interrupt.o(i.IntPrioritySet), (40 bytes).
    Removing interrupt.o(i.IntRegister), (52 bytes).
    Removing interrupt.o(i.IntTrigger), (12 bytes).
    Removing interrupt.o(i.IntUnregister), (20 bytes).
    Removing interrupt.o(i._IntDefaultHandler), (2 bytes).
    Removing interrupt.o(.constdata), (268 bytes).
    Removing interrupt.o(vtable), (620 bytes).

753 unused section(s) (total 31309 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/stdio/fputs.c           0x00000000   Number         0  fputs.o ABSOLUTE
    ../clib/microlib/stdio/fputs.c           0x00000000   Number         0  fputs_e.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdin.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stderr.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/d2f.c                  0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/microlib/f2d.c                  0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  fepilogue.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dflti.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    Port_Config.c                            0x00000000   Number         0  port_config.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    clib_os.c                                0x00000000   Number         0  clib_os.o ABSOLUTE
    cmsis_os2.c                              0x00000000   Number         0  cmsis_os2.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    i2c.c                                    0x00000000   Number         0  i2c.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    interrupt.c                              0x00000000   Number         0  interrupt.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    retarget_io.c                            0x00000000   Number         0  retarget_io.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    .ARM.Collect$$$$00000000                 0x0000026c   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x0000026c   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x00000270   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x00000274   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x00000274   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x00000274   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x0000027c   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x0000027c   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x0000027c   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x0000027c   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    $v0                                      0x00000280   Number         0  startup_tm4c123.o(.text)
    .text                                    0x00000280   Section      252  startup_tm4c123.o(.text)
    .text                                    0x0000037c   Section        0  memcpya.o(.text)
    .text                                    0x000003a0   Section        0  memseta.o(.text)
    .text                                    0x000003c4   Section        0  strlen.o(.text)
    .text                                    0x000003d2   Section        0  dmul.o(.text)
    .text                                    0x000004b6   Section        0  ddiv.o(.text)
    .text                                    0x00000594   Section        0  dflti.o(.text)
    .text                                    0x000005b6   Section        0  f2d.o(.text)
    .text                                    0x000005dc   Section        0  d2f.o(.text)
    .text                                    0x00000614   Section        0  uidiv.o(.text)
    .text                                    0x00000640   Section        0  uldiv.o(.text)
    .text                                    0x000006a2   Section        0  iusefp.o(.text)
    .text                                    0x000006a2   Section        0  fepilogue.o(.text)
    .text                                    0x00000710   Section        0  depilogue.o(.text)
    .text                                    0x000007ca   Section        0  dadd.o(.text)
    .text                                    0x00000918   Section        0  dfixul.o(.text)
    .text                                    0x00000948   Section       48  cdrcmple.o(.text)
    .text                                    0x00000978   Section       36  init.o(.text)
    .text                                    0x0000099c   Section        0  llshl.o(.text)
    .text                                    0x000009ba   Section        0  llushr.o(.text)
    .text                                    0x000009da   Section        0  llsshr.o(.text)
    [Anonymous Symbol]                       0x00000a00   Section        0  main.o(.text.ADC_Read)
    [Anonymous Symbol]                       0x00000a48   Section        0  main.o(.text.ButtonControlTask)
    [Anonymous Symbol]                       0x00000ae0   Section        0  main.o(.text.Delay)
    [Anonymous Symbol]                       0x00000b0c   Section        0  main.o(.text.Delay_MicroSecond)
    [Anonymous Symbol]                       0x00000ba0   Section        0  main.o(.text.GearSwitchTask)
    [Anonymous Symbol]                       0x00000be0   Section        0  main.o(.text.I2CSendByte)
    [Anonymous Symbol]                       0x00000c28   Section        0  main.o(.text.I2C_Init)
    [Anonymous Symbol]                       0x00000ca4   Section        0  main.o(.text.IgnitionMonitorTask)
    [Anonymous Symbol]                       0x00000d58   Section        0  main.o(.text.LCDI2CInit)
    [Anonymous Symbol]                       0x00000d98   Section        0  main.o(.text.Measure_distance)
    [Anonymous Symbol]                       0x00000e50   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x00000eb0   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x00000ec0   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x00000ee0   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00000ee4   Section        0  main.o(.text.SpeedCheckTask)
    [Anonymous Symbol]                       0x00001008   Section        0  cmsis_os2.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00001028   Section        0  system_tm4c123.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00001134   Section        0  main.o(.text.Timer0ACapture_init)
    [Anonymous Symbol]                       0x000011f8   Section        0  main.o(.text.UltrasonicTask)
    [Anonymous Symbol]                       0x00001300   Section        0  main.o(.text.VehicleAlertTask)
    [Anonymous Symbol]                       0x000013a0   Section        0  main.o(.text.begin)
    [Anonymous Symbol]                       0x00001438   Section        0  main.o(.text.clear)
    [Anonymous Symbol]                       0x00001450   Section        0  main.o(.text.clearRow)
    [Anonymous Symbol]                       0x000014a4   Section        0  main.o(.text.command)
    [Anonymous Symbol]                       0x000014c0   Section        0  main.o(.text.controlBuzzer)
    [Anonymous Symbol]                       0x000014f4   Section        0  main.o(.text.controlLEDAndBuzzer)
    [Anonymous Symbol]                       0x000015d4   Section        0  main.o(.text.displayTextOnLCD)
    [Anonymous Symbol]                       0x00001600   Section        0  main.o(.text.expanderWrite)
    [Anonymous Symbol]                       0x00001620   Section        0  main.o(.text.gearreverseoff)
    [Anonymous Symbol]                       0x00001630   Section        0  main.o(.text.gearreverseon)
    [Anonymous Symbol]                       0x00001640   Section        0  main.o(.text.home)
    [Anonymous Symbol]                       0x00001658   Section        0  main.o(.text.initButtons)
    [Anonymous Symbol]                       0x000016d4   Section        0  main.o(.text.initBuzzer)
    [Anonymous Symbol]                       0x0000171c   Section        0  main.o(.text.initDriverDoor)
    [Anonymous Symbol]                       0x00001774   Section        0  main.o(.text.initGearSwitch)
    [Anonymous Symbol]                       0x000017cc   Section        0  main.o(.text.initIgnitionSwitch)
    [Anonymous Symbol]                       0x00001824   Section        0  main.o(.text.initPotentiometer)
    [Anonymous Symbol]                       0x000018dc   Section        0  main.o(.text.initUltrasonicLEDs)
    [Anonymous Symbol]                       0x00001924   Section        0  main.o(.text.isDoorOpen)
    [Anonymous Symbol]                       0x00001934   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x00001a50   Section        0  main.o(.text.print)
    prvAddCurrentTaskToDelayedList           0x00001a75   Thumb Code   270  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x00001a74   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x00001b85   Thumb Code   368  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x00001b84   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x00001cf5   Thumb Code   126  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x00001cf4   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x00001d75   Thumb Code    90  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x00001d74   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x00001dd1   Thumb Code    66  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x00001dd0   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x00001e15   Thumb Code   204  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x00001e14   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvCreateIdleTasks                       0x00001ee1   Thumb Code   200  tasks.o(.text.prvCreateIdleTasks)
    [Anonymous Symbol]                       0x00001ee0   Section        0  tasks.o(.text.prvCreateIdleTasks)
    prvCreateStaticTask                      0x00001fa9   Thumb Code   120  tasks.o(.text.prvCreateStaticTask)
    [Anonymous Symbol]                       0x00001fa8   Section        0  tasks.o(.text.prvCreateStaticTask)
    prvCreateTask                            0x00002021   Thumb Code   142  tasks.o(.text.prvCreateTask)
    [Anonymous Symbol]                       0x00002020   Section        0  tasks.o(.text.prvCreateTask)
    prvDeleteTCB                             0x000020b1   Thumb Code    60  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x000020b0   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetDisinheritPriorityAfterTimeout     0x000020ed   Thumb Code    38  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x000020ec   Section        0  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvGetNextExpireTime                     0x00002115   Thumb Code    64  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x00002114   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvHeapInit                              0x00002155   Thumb Code   170  heap_4.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x00002154   Section        0  heap_4.o(.text.prvHeapInit)
    prvIdleTask                              0x00002201   Thumb Code    56  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x00002200   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseMutex                       0x00002239   Thumb Code    44  queue.o(.text.prvInitialiseMutex)
    [Anonymous Symbol]                       0x00002238   Section        0  queue.o(.text.prvInitialiseMutex)
    prvInitialiseNewQueue                    0x00002265   Thumb Code    72  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x00002264   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x000022ad   Thumb Code   230  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x000022ac   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x00002395   Thumb Code   142  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x00002394   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertBlockIntoFreeList               0x00002425   Thumb Code   216  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x00002424   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvInsertTimerInActiveList               0x000024fd   Thumb Code   134  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x000024fc   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x00002585   Thumb Code    40  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x00002584   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x000025ad   Thumb Code    46  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x000025ac   Section        0  queue.o(.text.prvIsQueueFull)
    prvPortStartFirstTask                    0x000025dd   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x000025dc   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x00002605   Thumb Code    84  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x00002604   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x00002659   Thumb Code   334  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x00002658   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x000027a9   Thumb Code   154  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x000027a8   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvReloadTimer                           0x00002845   Thumb Code    52  timers.o(.text.prvReloadTimer)
    [Anonymous Symbol]                       0x00002844   Section        0  timers.o(.text.prvReloadTimer)
    prvResetNextTaskUnblockTime              0x00002879   Thumb Code    60  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x00002878   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x000028b5   Thumb Code    68  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x000028b4   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x000028f9   Thumb Code    82  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x000028f8   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x0000294d   Thumb Code    38  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x0000294c   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x00002975   Thumb Code    30  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x00002974   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x00002995   Thumb Code   174  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00002994   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00002a44   Section        0  main.o(.text.pulseEnable)
    [Anonymous Symbol]                       0x00002a7c   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x00002c34   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x00002c58   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x00002cb8   Section        0  main.o(.text.readPotentiometer)
    [Anonymous Symbol]                       0x00002d70   Section        0  main.o(.text.send)
    [Anonymous Symbol]                       0x00002db8   Section        0  main.o(.text.setCursor)
    [Anonymous Symbol]                       0x00002e08   Section        0  main.o(.text.showdoorstatus)
    [Anonymous Symbol]                       0x00002e6c   Section        0  main.o(.text.toggleDoorLock)
    [Anonymous Symbol]                       0x00002ee4   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x00002f2c   Section        0  tasks.o(.text.vApplicationGetIdleTaskMemory)
    [Anonymous Symbol]                       0x00002f58   Section        0  tasks.o(.text.vApplicationGetTimerTaskMemory)
    [Anonymous Symbol]                       0x00002f84   Section        0  cmsis_os2.o(.text.vApplicationStackOverflowHook)
    [Anonymous Symbol]                       0x00002f90   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x00002fc0   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00002fd0   Section        0  list.o(.text.vListInsert)
    vPortEnableVFP                           0x0000303d   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x0000303c   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00003050   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x00003080   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x000030a8   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x00003120   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x00003164   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x000031c8   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x00003214   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x00003238   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x00003248   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x00003270   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x000032d4   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x0000340c   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x00003480   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x00003490   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00003490   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x000035ac   Section        0  main.o(.text.write)
    [Anonymous Symbol]                       0x000035cc   Section        0  main.o(.text.write4bits)
    [Anonymous Symbol]                       0x000035f0   Section        0  main.o(.text.write_string)
    [Anonymous Symbol]                       0x00003630   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x0000369c   Section        0  port.o(.text.xPortSysTickHandler)
    [Anonymous Symbol]                       0x000036dc   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x00003704   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x0000378c   Section        0  queue.o(.text.xQueueGenericCreateStatic)
    [Anonymous Symbol]                       0x000037f8   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x000038c8   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x00003a34   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x00003b88   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x00003d28   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x00003dec   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x00003e40   Section        0  tasks.o(.text.xTaskCreateStatic)
    [Anonymous Symbol]                       0x00003e9c   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x00003ed4   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x00003ee8   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x00004148   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x0000423c   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x00004398   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x0000452c   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x0000476c   Section        0  timers.o(.text.xTimerCreateTimerTask)
    i.GPIODirModeSet                         0x000047e4   Section        0  gpio.o(i.GPIODirModeSet)
    i.GPIOPadConfigSet                       0x0000480c   Section        0  gpio.o(i.GPIOPadConfigSet)
    i.GPIOPinConfigure                       0x0000497c   Section        0  gpio.o(i.GPIOPinConfigure)
    i.GPIOPinTypeI2C                         0x000049c0   Section        0  gpio.o(i.GPIOPinTypeI2C)
    i.GPIOPinTypeI2CSCL                      0x000049dc   Section        0  gpio.o(i.GPIOPinTypeI2CSCL)
    i.I2CMasterBusy                          0x000049f8   Section        0  i2c.o(i.I2CMasterBusy)
    i.I2CMasterControl                       0x00004a04   Section        0  i2c.o(i.I2CMasterControl)
    i.I2CMasterDataPut                       0x00004a08   Section        0  i2c.o(i.I2CMasterDataPut)
    i.I2CMasterInitExpClk                    0x00004a0c   Section        0  i2c.o(i.I2CMasterInitExpClk)
    i.I2CMasterSlaveAddrSet                  0x00004a60   Section        0  i2c.o(i.I2CMasterSlaveAddrSet)
    i.SysCtlClockGet                         0x00004a68   Section        0  sysctl.o(i.SysCtlClockGet)
    i.SysCtlPeripheralEnable                 0x00004bbc   Section        0  sysctl.o(i.SysCtlPeripheralEnable)
    i.SysCtlPeripheralReset                  0x00004be4   Section        0  sysctl.o(i.SysCtlPeripheralReset)
    i.__0snprintf                            0x00004c20   Section        0  printfa.o(i.__0snprintf)
    i.__scatterload_copy                     0x00004c54   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00004c62   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00004c64   Section       14  handlers.o(i.__scatterload_zeroinit)
    _fp_digits                               0x00004c75   Thumb Code   366  printfa.o(i._fp_digits)
    i._fp_digits                             0x00004c74   Section        0  printfa.o(i._fp_digits)
    _printf_core                             0x00004df9   Thumb Code  1744  printfa.o(i._printf_core)
    i._printf_core                           0x00004df8   Section        0  printfa.o(i._printf_core)
    _printf_post_padding                     0x000054d5   Thumb Code    36  printfa.o(i._printf_post_padding)
    i._printf_post_padding                   0x000054d4   Section        0  printfa.o(i._printf_post_padding)
    _printf_pre_padding                      0x000054f9   Thumb Code    46  printfa.o(i._printf_pre_padding)
    i._printf_pre_padding                    0x000054f8   Section        0  printfa.o(i._printf_pre_padding)
    _snputc                                  0x00005527   Thumb Code    22  printfa.o(i._snputc)
    i._snputc                                0x00005526   Section        0  printfa.o(i._snputc)
    g_ppui32GPIOIntMapBlizzard               0x0000553c   Data         192  gpio.o(.constdata)
    .constdata                               0x0000553c   Section      552  gpio.o(.constdata)
    g_ppui32GPIOIntMapSnowflake              0x000055fc   Data         216  gpio.o(.constdata)
    g_pui32GPIOBaseAddrs                     0x000056d4   Data         144  gpio.o(.constdata)
    g_pui32VCOFrequencies                    0x00005764   Data           8  sysctl.o(.constdata)
    .constdata                               0x00005764   Section      596  sysctl.o(.constdata)
    g_pui32Xtals                             0x0000576c   Data         108  sysctl.o(.constdata)
    g_pppui32XTALtoVCO                       0x000057d8   Data         432  sysctl.o(.constdata)
    g_sXTALtoMEMTIM                          0x00005988   Data          48  sysctl.o(.constdata)
    .L.str                                   0x000059b8   Data           2  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x000059b8   Section        0  main.o(.rodata.str1.1)
    .L.str.5                                 0x000059ba   Data          18  main.o(.rodata.str1.1)
    .L.str.2                                 0x000059cc   Data          12  main.o(.rodata.str1.1)
    .L.str.1                                 0x000059d8   Data          14  main.o(.rodata.str1.1)
    .L.str.3                                 0x000059e6   Data          18  main.o(.rodata.str1.1)
    .L.str.9                                 0x000059f8   Data          16  main.o(.rodata.str1.1)
    .L.str.10                                0x00005a08   Data          17  main.o(.rodata.str1.1)
    .L.str.8                                 0x00005a19   Data          17  main.o(.rodata.str1.1)
    .L.str.6                                 0x00005a2a   Data          20  main.o(.rodata.str1.1)
    .L.str.11                                0x00005a3e   Data          17  main.o(.rodata.str1.1)
    .L.str.4                                 0x00005a4f   Data          15  main.o(.rodata.str1.1)
    .L.str.7                                 0x00005a5e   Data          17  main.o(.rodata.str1.1)
    .L.str                                   0x00005a6f   Data           5  tasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00005a6f   Section        0  tasks.o(.rodata.str1.1)
    .L.str                                   0x00005a74   Data           8  timers.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00005a74   Section        0  timers.o(.rodata.str1.1)
    uxTopUsedPriority                        0x00005a7c   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    [Anonymous Symbol]                       0x00005a7c   Section        0  tasks.o(.rodata.uxTopUsedPriority)
    uxCriticalNesting                        0x20000004   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000004   Section        0  port.o(.data.uxCriticalNesting)
    prvCheckForValidListAndQueue.ucStaticTimerQueueStorage 0x2000003c   Data          80  timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    [Anonymous Symbol]                       0x2000003c   Section        0  timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    prvCheckForValidListAndQueue.xStaticTimerQueue 0x2000008c   Data          80  timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    [Anonymous Symbol]                       0x2000008c   Section        0  timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    prvSampleTimeNow.xLastTime               0x200000dc   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x200000dc   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    __tagsym$$used.1                         0x200000e0   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxCurrentTimerList                       0x200000e4   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x200000e4   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x200000e8   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x200000e8   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x200000ec   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x200000ec   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x200000f0   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x200000f0   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x200000f4   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x200000f4   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x200000f8   Data        1120  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x200000f8   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000560   Data        8192  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000560   Section        0  heap_4.o(.bss.ucHeap)
    uxCurrentNumberOfTasks                   0x20002560   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20002560   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20002564   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20002564   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20002568   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20002568   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x2000256c   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x2000256c   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20002570   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20002570   Section        0  tasks.o(.bss.uxTopReadyPriority)
    vApplicationGetIdleTaskMemory.uxIdleTaskStack 0x20002574   Data         512  tasks.o(.bss.vApplicationGetIdleTaskMemory.uxIdleTaskStack)
    [Anonymous Symbol]                       0x20002574   Section        0  tasks.o(.bss.vApplicationGetIdleTaskMemory.uxIdleTaskStack)
    vApplicationGetIdleTaskMemory.xIdleTaskTCB 0x20002774   Data          92  tasks.o(.bss.vApplicationGetIdleTaskMemory.xIdleTaskTCB)
    [Anonymous Symbol]                       0x20002774   Section        0  tasks.o(.bss.vApplicationGetIdleTaskMemory.xIdleTaskTCB)
    vApplicationGetTimerTaskMemory.uxTimerTaskStack 0x200027d0   Data         320  tasks.o(.bss.vApplicationGetTimerTaskMemory.uxTimerTaskStack)
    [Anonymous Symbol]                       0x200027d0   Section        0  tasks.o(.bss.vApplicationGetTimerTaskMemory.uxTimerTaskStack)
    vApplicationGetTimerTaskMemory.xTimerTaskTCB 0x20002910   Data          92  tasks.o(.bss.vApplicationGetTimerTaskMemory.xTimerTaskTCB)
    [Anonymous Symbol]                       0x20002910   Section        0  tasks.o(.bss.vApplicationGetTimerTaskMemory.xTimerTaskTCB)
    xActiveTimerList1                        0x2000296c   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x2000296c   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20002980   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20002980   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x20002994   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20002994   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x200029a8   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x200029a8   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x200029bc   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x200029bc   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandles                         0x200029c0   Data           4  tasks.o(.bss.xIdleTaskHandles)
    [Anonymous Symbol]                       0x200029c0   Section        0  tasks.o(.bss.xIdleTaskHandles)
    xMinimumEverFreeBytesRemaining           0x200029c4   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x200029c4   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x200029cc   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x200029cc   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x200029d0   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x200029d0   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x200029d4   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x200029d4   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x200029d8   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x200029d8   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x200029dc   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x200029dc   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x200029e0   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x200029e0   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x200029f4   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x200029f4   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x200029f8   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x200029f8   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x20002a00   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002a00   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20002a14   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20002a14   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20002a28   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20002a28   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20002a2c   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20002a2c   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20002a30   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20002a30   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPendings                           0x20002a34   Data           4  tasks.o(.bss.xYieldPendings)
    [Anonymous Symbol]                       0x20002a34   Section        0  tasks.o(.bss.xYieldPendings)
    STACK                                    0x20002a38   Section      512  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x0000026d   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x00000271   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x00000275   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x00000275   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x00000275   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x00000275   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x0000027d   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x0000027d   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x00000281   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x00000289   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x0000028b   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x0000028d   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x0000028f   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x00000291   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x00000295   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOA_Handler                            0x0000029b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x0000029d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOC_Handler                            0x0000029f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x000002a1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOE_Handler                            0x000002a3   Thumb Code     2  startup_tm4c123.o(.text)
    UART0_Handler                            0x000002a5   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x000002a7   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x000002a9   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x000002ab   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x000002ad   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x000002af   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x000002b1   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x000002b3   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x000002b5   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x000002b7   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x000002b9   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x000002bb   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x000002bd   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x000002bf   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x000002c1   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x000002c3   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x000002c5   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x000002c7   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x000002c9   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x000002cb   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x000002cd   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x000002cf   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x000002d1   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x000002d3   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x000002d5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOF_Handler                            0x000002d7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x000002d9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x000002db   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x000002dd   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x000002df   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x000002e1   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x000002e3   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x000002e5   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x000002e7   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x000002e9   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x000002eb   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x000002ed   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x000002ef   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x000002f1   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x000002f3   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x000002f5   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x000002f7   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x000002f9   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x000002fb   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x000002fd   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x000002ff   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x00000301   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x00000303   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x00000305   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x00000307   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x00000309   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x0000030b   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x0000030d   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x0000030f   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x00000311   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x00000313   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x00000315   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x00000317   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x00000319   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x0000031b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x0000031d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x0000031f   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x00000321   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x00000323   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x00000325   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x00000327   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x00000329   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x0000032b   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x0000032d   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x0000032f   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x00000331   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x00000333   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x00000335   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x00000337   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x00000339   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x0000033b   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x0000033d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x0000033f   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x00000341   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x00000343   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x00000345   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x00000347   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x00000349   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x0000034b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x0000034d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x0000034f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x00000351   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x00000353   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x00000355   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x00000357   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x00000359   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x0000035b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x0000035d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x0000035f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x00000361   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x00000363   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x00000367   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x00000369   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x0000036b   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x0000036d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x0000036f   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    __aeabi_memcpy                           0x0000037d   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x0000037d   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x0000037d   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x000003a1   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x000003a1   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x000003a1   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x000003af   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x000003af   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x000003af   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x000003b3   Thumb Code    18  memseta.o(.text)
    strlen                                   0x000003c5   Thumb Code    14  strlen.o(.text)
    __aeabi_dmul                             0x000003d3   Thumb Code   228  dmul.o(.text)
    __aeabi_ddiv                             0x000004b7   Thumb Code   222  ddiv.o(.text)
    __aeabi_i2d                              0x00000595   Thumb Code    34  dflti.o(.text)
    __aeabi_f2d                              0x000005b7   Thumb Code    38  f2d.o(.text)
    __aeabi_d2f                              0x000005dd   Thumb Code    56  d2f.o(.text)
    __aeabi_uidiv                            0x00000615   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x00000615   Thumb Code    44  uidiv.o(.text)
    __aeabi_uldivmod                         0x00000641   Thumb Code    98  uldiv.o(.text)
    __I$use$fp                               0x000006a3   Thumb Code     0  iusefp.o(.text)
    _float_round                             0x000006a3   Thumb Code    18  fepilogue.o(.text)
    _float_epilogue                          0x000006b5   Thumb Code    92  fepilogue.o(.text)
    _double_round                            0x00000711   Thumb Code    30  depilogue.o(.text)
    _double_epilogue                         0x0000072f   Thumb Code   156  depilogue.o(.text)
    __aeabi_dadd                             0x000007cb   Thumb Code   322  dadd.o(.text)
    __aeabi_dsub                             0x0000090d   Thumb Code     6  dadd.o(.text)
    __aeabi_drsub                            0x00000913   Thumb Code     6  dadd.o(.text)
    __aeabi_d2ulz                            0x00000919   Thumb Code    48  dfixul.o(.text)
    __aeabi_cdrcmple                         0x00000949   Thumb Code    48  cdrcmple.o(.text)
    __scatterload                            0x00000979   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00000979   Thumb Code     0  init.o(.text)
    __aeabi_llsl                             0x0000099d   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x0000099d   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x000009bb   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x000009bb   Thumb Code     0  llushr.o(.text)
    __aeabi_lasr                             0x000009db   Thumb Code    36  llsshr.o(.text)
    _ll_sshift_r                             0x000009db   Thumb Code     0  llsshr.o(.text)
    ADC_Read                                 0x00000a01   Thumb Code    72  main.o(.text.ADC_Read)
    ButtonControlTask                        0x00000a49   Thumb Code   152  main.o(.text.ButtonControlTask)
    Delay                                    0x00000ae1   Thumb Code    42  main.o(.text.Delay)
    Delay_MicroSecond                        0x00000b0d   Thumb Code   148  main.o(.text.Delay_MicroSecond)
    GearSwitchTask                           0x00000ba1   Thumb Code    62  main.o(.text.GearSwitchTask)
    I2CSendByte                              0x00000be1   Thumb Code    70  main.o(.text.I2CSendByte)
    I2C_Init                                 0x00000c29   Thumb Code   124  main.o(.text.I2C_Init)
    IgnitionMonitorTask                      0x00000ca5   Thumb Code   178  main.o(.text.IgnitionMonitorTask)
    LCDI2CInit                               0x00000d59   Thumb Code    64  main.o(.text.LCDI2CInit)
    Measure_distance                         0x00000d99   Thumb Code   176  main.o(.text.Measure_distance)
    PendSV_Handler                           0x00000e51   Thumb Code   100  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x00000ec1   Thumb Code    36  port.o(.text.SVC_Handler)
    SpeedCheckTask                           0x00000ee5   Thumb Code   292  main.o(.text.SpeedCheckTask)
    SysTick_Handler                          0x00001009   Thumb Code    30  cmsis_os2.o(.text.SysTick_Handler)
    SystemInit                               0x00001029   Thumb Code   268  system_tm4c123.o(.text.SystemInit)
    Timer0ACapture_init                      0x00001135   Thumb Code   196  main.o(.text.Timer0ACapture_init)
    UltrasonicTask                           0x000011f9   Thumb Code   264  main.o(.text.UltrasonicTask)
    VehicleAlertTask                         0x00001301   Thumb Code   158  main.o(.text.VehicleAlertTask)
    begin                                    0x000013a1   Thumb Code   152  main.o(.text.begin)
    clear                                    0x00001439   Thumb Code    24  main.o(.text.clear)
    clearRow                                 0x00001451   Thumb Code    82  main.o(.text.clearRow)
    command                                  0x000014a5   Thumb Code    26  main.o(.text.command)
    controlBuzzer                            0x000014c1   Thumb Code    50  main.o(.text.controlBuzzer)
    controlLEDAndBuzzer                      0x000014f5   Thumb Code   222  main.o(.text.controlLEDAndBuzzer)
    displayTextOnLCD                         0x000015d5   Thumb Code    42  main.o(.text.displayTextOnLCD)
    expanderWrite                            0x00001601   Thumb Code    30  main.o(.text.expanderWrite)
    gearreverseoff                           0x00001621   Thumb Code    14  main.o(.text.gearreverseoff)
    gearreverseon                            0x00001631   Thumb Code    14  main.o(.text.gearreverseon)
    home                                     0x00001641   Thumb Code    24  main.o(.text.home)
    initButtons                              0x00001659   Thumb Code   122  main.o(.text.initButtons)
    initBuzzer                               0x000016d5   Thumb Code    72  main.o(.text.initBuzzer)
    initDriverDoor                           0x0000171d   Thumb Code    88  main.o(.text.initDriverDoor)
    initGearSwitch                           0x00001775   Thumb Code    88  main.o(.text.initGearSwitch)
    initIgnitionSwitch                       0x000017cd   Thumb Code    88  main.o(.text.initIgnitionSwitch)
    initPotentiometer                        0x00001825   Thumb Code   184  main.o(.text.initPotentiometer)
    initUltrasonicLEDs                       0x000018dd   Thumb Code    72  main.o(.text.initUltrasonicLEDs)
    isDoorOpen                               0x00001925   Thumb Code    16  main.o(.text.isDoorOpen)
    main                                     0x00001935   Thumb Code   282  main.o(.text.main)
    print                                    0x00001a51   Thumb Code    34  main.o(.text.print)
    pulseEnable                              0x00002a45   Thumb Code    56  main.o(.text.pulseEnable)
    pvPortMalloc                             0x00002a7d   Thumb Code   438  heap_4.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x00002c35   Thumb Code    36  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x00002c59   Thumb Code    94  port.o(.text.pxPortInitialiseStack)
    readPotentiometer                        0x00002cb9   Thumb Code   184  main.o(.text.readPotentiometer)
    send                                     0x00002d71   Thumb Code    72  main.o(.text.send)
    setCursor                                0x00002db9   Thumb Code    80  main.o(.text.setCursor)
    showdoorstatus                           0x00002e09   Thumb Code    98  main.o(.text.showdoorstatus)
    toggleDoorLock                           0x00002e6d   Thumb Code   120  main.o(.text.toggleDoorLock)
    uxListRemove                             0x00002ee5   Thumb Code    72  list.o(.text.uxListRemove)
    vApplicationGetIdleTaskMemory            0x00002f2d   Thumb Code    42  tasks.o(.text.vApplicationGetIdleTaskMemory)
    vApplicationGetTimerTaskMemory           0x00002f59   Thumb Code    42  tasks.o(.text.vApplicationGetTimerTaskMemory)
    vApplicationStackOverflowHook            0x00002f85   Thumb Code    10  cmsis_os2.o(.text.vApplicationStackOverflowHook)
    vListInitialise                          0x00002f91   Thumb Code    46  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x00002fc1   Thumb Code    14  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00002fd1   Thumb Code   106  list.o(.text.vListInsert)
    vPortEnterCritical                       0x00003051   Thumb Code    48  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x00003081   Thumb Code    38  port.o(.text.vPortExitCritical)
    vPortFree                                0x000030a9   Thumb Code   118  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x00003121   Thumb Code    68  port.o(.text.vPortSetupTimerInterrupt)
    vQueueWaitForMessageRestricted           0x00003165   Thumb Code   100  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x000031c9   Thumb Code    74  tasks.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x00003215   Thumb Code    36  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x00003239   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00003249   Thumb Code    38  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x00003271   Thumb Code   100  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPriorityDisinheritAfterTimeout      0x000032d5   Thumb Code   312  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskStartScheduler                      0x0000340d   Thumb Code   114  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x00003481   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x00003491   Thumb Code   284  tasks.o(.text.vTaskSwitchContext)
    write                                    0x000035ad   Thumb Code    30  main.o(.text.write)
    write4bits                               0x000035cd   Thumb Code    34  main.o(.text.write4bits)
    write_string                             0x000035f1   Thumb Code    62  main.o(.text.write_string)
    xPortStartScheduler                      0x00003631   Thumb Code   108  port.o(.text.xPortStartScheduler)
    xPortSysTickHandler                      0x0000369d   Thumb Code    62  port.o(.text.xPortSysTickHandler)
    xQueueCreateMutex                        0x000036dd   Thumb Code    38  queue.o(.text.xQueueCreateMutex)
    xQueueGenericCreate                      0x00003705   Thumb Code   134  queue.o(.text.xQueueGenericCreate)
    xQueueGenericCreateStatic                0x0000378d   Thumb Code   108  queue.o(.text.xQueueGenericCreateStatic)
    xQueueGenericReset                       0x000037f9   Thumb Code   208  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x000038c9   Thumb Code   362  queue.o(.text.xQueueGenericSend)
    xQueueReceive                            0x00003a35   Thumb Code   338  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x00003b89   Thumb Code   414  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x00003d29   Thumb Code   196  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x00003ded   Thumb Code    82  tasks.o(.text.xTaskCreate)
    xTaskCreateStatic                        0x00003e41   Thumb Code    92  tasks.o(.text.xTaskCreateStatic)
    xTaskGetSchedulerState                   0x00003e9d   Thumb Code    56  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x00003ed5   Thumb Code    20  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x00003ee9   Thumb Code   606  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00004149   Thumb Code   242  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x0000423d   Thumb Code   348  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x00004399   Thumb Code   404  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x0000452d   Thumb Code   574  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x0000476d   Thumb Code   120  timers.o(.text.xTimerCreateTimerTask)
    GPIODirModeSet                           0x000047e5   Thumb Code    40  gpio.o(i.GPIODirModeSet)
    GPIOPadConfigSet                         0x0000480d   Thumb Code   354  gpio.o(i.GPIOPadConfigSet)
    GPIOPinConfigure                         0x0000497d   Thumb Code    60  gpio.o(i.GPIOPinConfigure)
    GPIOPinTypeI2C                           0x000049c1   Thumb Code    28  gpio.o(i.GPIOPinTypeI2C)
    GPIOPinTypeI2CSCL                        0x000049dd   Thumb Code    28  gpio.o(i.GPIOPinTypeI2CSCL)
    I2CMasterBusy                            0x000049f9   Thumb Code    12  i2c.o(i.I2CMasterBusy)
    I2CMasterControl                         0x00004a05   Thumb Code     4  i2c.o(i.I2CMasterControl)
    I2CMasterDataPut                         0x00004a09   Thumb Code     4  i2c.o(i.I2CMasterDataPut)
    I2CMasterInitExpClk                      0x00004a0d   Thumb Code    72  i2c.o(i.I2CMasterInitExpClk)
    I2CMasterSlaveAddrSet                    0x00004a61   Thumb Code     8  i2c.o(i.I2CMasterSlaveAddrSet)
    SysCtlClockGet                           0x00004a69   Thumb Code   304  sysctl.o(i.SysCtlClockGet)
    SysCtlPeripheralEnable                   0x00004bbd   Thumb Code    36  sysctl.o(i.SysCtlPeripheralEnable)
    SysCtlPeripheralReset                    0x00004be5   Thumb Code    56  sysctl.o(i.SysCtlPeripheralReset)
    __0snprintf                              0x00004c21   Thumb Code    48  printfa.o(i.__0snprintf)
    __1snprintf                              0x00004c21   Thumb Code     0  printfa.o(i.__0snprintf)
    __2snprintf                              0x00004c21   Thumb Code     0  printfa.o(i.__0snprintf)
    __c89snprintf                            0x00004c21   Thumb Code     0  printfa.o(i.__0snprintf)
    snprintf                                 0x00004c21   Thumb Code     0  printfa.o(i.__0snprintf)
    __scatterload_copy                       0x00004c55   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00004c63   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00004c65   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    Region$$Table$$Base                      0x00005a80   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00005aa0   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    dis                                      0x20000008   Data           8  main.o(.bss.dis)
    distance                                 0x20000010   Data           4  main.o(.bss.distance)
    diststr                                  0x20000014   Data          20  main.o(.bss.diststr)
    doorLocked                               0x20000028   Data           4  main.o(.bss.doorLocked)
    gearReverse                              0x2000002c   Data           4  main.o(.bss.gearReverse)
    gearSwitchState                          0x20000030   Data           4  main.o(.bss.gearSwitchState)
    globalLock                               0x20000034   Data           1  main.o(.bss.globalLock)
    globalSpeed                              0x20000035   Data           1  main.o(.bss.globalSpeed)
    ignitionSwitchState                      0x20000038   Data           4  main.o(.bss.ignitionSwitchState)
    pxCurrentTCB                             0x200000e0   Data           4  tasks.o(.bss.pxCurrentTCB)
    speed                                    0x20000558   Data           4  main.o(.bss.speed)
    time                                     0x2000055c   Data           4  main.o(.bss.time)
    xMutex                                   0x200029c8   Data           4  main.o(.bss.xMutex)
    __initial_sp                             0x20002c38   Data           0  startup_tm4c123.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x0000026d

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00005aa8, Max: 0x00040000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00005aa0, Max: 0x00040000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO          370    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000000   Code   RO         2011  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x0000026c   0x0000026c   0x00000004   Code   RO         2067    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x00000270   0x00000270   0x00000004   Code   RO         2070    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x00000274   0x00000274   0x00000000   Code   RO         2072    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x00000274   0x00000274   0x00000000   Code   RO         2074    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x00000274   0x00000274   0x00000008   Code   RO         2075    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x0000027c   0x0000027c   0x00000000   Code   RO         2077    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x0000027c   0x0000027c   0x00000000   Code   RO         2079    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x0000027c   0x0000027c   0x00000004   Code   RO         2068    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x00000280   0x00000280   0x000000fc   Code   RO          371    .text               startup_tm4c123.o
    0x0000037c   0x0000037c   0x00000024   Code   RO         2021    .text               mc_w.l(memcpya.o)
    0x000003a0   0x000003a0   0x00000024   Code   RO         2023    .text               mc_w.l(memseta.o)
    0x000003c4   0x000003c4   0x0000000e   Code   RO         2025    .text               mc_w.l(strlen.o)
    0x000003d2   0x000003d2   0x000000e4   Code   RO         2057    .text               mf_w.l(dmul.o)
    0x000004b6   0x000004b6   0x000000de   Code   RO         2059    .text               mf_w.l(ddiv.o)
    0x00000594   0x00000594   0x00000022   Code   RO         2061    .text               mf_w.l(dflti.o)
    0x000005b6   0x000005b6   0x00000026   Code   RO         2063    .text               mf_w.l(f2d.o)
    0x000005dc   0x000005dc   0x00000038   Code   RO         2065    .text               mf_w.l(d2f.o)
    0x00000614   0x00000614   0x0000002c   Code   RO         2090    .text               mc_w.l(uidiv.o)
    0x00000640   0x00000640   0x00000062   Code   RO         2092    .text               mc_w.l(uldiv.o)
    0x000006a2   0x000006a2   0x00000000   Code   RO         2094    .text               mc_w.l(iusefp.o)
    0x000006a2   0x000006a2   0x0000006e   Code   RO         2095    .text               mf_w.l(fepilogue.o)
    0x00000710   0x00000710   0x000000ba   Code   RO         2097    .text               mf_w.l(depilogue.o)
    0x000007ca   0x000007ca   0x0000014e   Code   RO         2099    .text               mf_w.l(dadd.o)
    0x00000918   0x00000918   0x00000030   Code   RO         2101    .text               mf_w.l(dfixul.o)
    0x00000948   0x00000948   0x00000030   Code   RO         2103    .text               mf_w.l(cdrcmple.o)
    0x00000978   0x00000978   0x00000024   Code   RO         2105    .text               mc_w.l(init.o)
    0x0000099c   0x0000099c   0x0000001e   Code   RO         2107    .text               mc_w.l(llshl.o)
    0x000009ba   0x000009ba   0x00000020   Code   RO         2109    .text               mc_w.l(llushr.o)
    0x000009da   0x000009da   0x00000024   Code   RO         2111    .text               mc_w.l(llsshr.o)
    0x000009fe   0x000009fe   0x00000002   PAD
    0x00000a00   0x00000a00   0x00000048   Code   RO           72    .text.ADC_Read      main.o
    0x00000a48   0x00000a48   0x00000098   Code   RO           68    .text.ButtonControlTask  main.o
    0x00000ae0   0x00000ae0   0x0000002a   Code   RO            2    .text.Delay         main.o
    0x00000b0a   0x00000b0a   0x00000002   PAD
    0x00000b0c   0x00000b0c   0x00000094   Code   RO           80    .text.Delay_MicroSecond  main.o
    0x00000ba0   0x00000ba0   0x0000003e   Code   RO           12    .text.GearSwitchTask  main.o
    0x00000bde   0x00000bde   0x00000002   PAD
    0x00000be0   0x00000be0   0x00000046   Code   RO           16    .text.I2CSendByte   main.o
    0x00000c26   0x00000c26   0x00000002   PAD
    0x00000c28   0x00000c28   0x0000007c   Code   RO           14    .text.I2C_Init      main.o
    0x00000ca4   0x00000ca4   0x000000b2   Code   RO           92    .text.IgnitionMonitorTask  main.o
    0x00000d56   0x00000d56   0x00000002   PAD
    0x00000d58   0x00000d58   0x00000040   Code   RO           42    .text.LCDI2CInit    main.o
    0x00000d98   0x00000d98   0x000000b0   Code   RO           82    .text.Measure_distance  main.o
    0x00000e48   0x00000e48   0x00000008   PAD
    0x00000e50   0x00000e50   0x00000064   Code   RO          469    .text.PendSV_Handler  port.o
    0x00000eb4   0x00000eb4   0x0000000c   PAD
    0x00000ec0   0x00000ec0   0x00000024   Code   RO          453    .text.SVC_Handler   port.o
    0x00000ee4   0x00000ee4   0x00000124   Code   RO           76    .text.SpeedCheckTask  main.o
    0x00001008   0x00001008   0x0000001e   Code   RO          149    .text.SysTick_Handler  cmsis_os2.o
    0x00001026   0x00001026   0x00000002   PAD
    0x00001028   0x00001028   0x0000010c   Code   RO          382    .text.SystemInit    system_tm4c123.o
    0x00001134   0x00001134   0x000000c4   Code   RO           84    .text.Timer0ACapture_init  main.o
    0x000011f8   0x000011f8   0x00000108   Code   RO           88    .text.UltrasonicTask  main.o
    0x00001300   0x00001300   0x0000009e   Code   RO          100    .text.VehicleAlertTask  main.o
    0x0000139e   0x0000139e   0x00000002   PAD
    0x000013a0   0x000013a0   0x00000098   Code   RO           40    .text.begin         main.o
    0x00001438   0x00001438   0x00000018   Code   RO           36    .text.clear         main.o
    0x00001450   0x00001450   0x00000052   Code   RO           58    .text.clearRow      main.o
    0x000014a2   0x000014a2   0x00000002   PAD
    0x000014a4   0x000014a4   0x0000001a   Code   RO           26    .text.command       main.o
    0x000014be   0x000014be   0x00000002   PAD
    0x000014c0   0x000014c0   0x00000032   Code   RO           98    .text.controlBuzzer  main.o
    0x000014f2   0x000014f2   0x00000002   PAD
    0x000014f4   0x000014f4   0x000000de   Code   RO           86    .text.controlLEDAndBuzzer  main.o
    0x000015d2   0x000015d2   0x00000002   PAD
    0x000015d4   0x000015d4   0x0000002a   Code   RO           60    .text.displayTextOnLCD  main.o
    0x000015fe   0x000015fe   0x00000002   PAD
    0x00001600   0x00001600   0x0000001e   Code   RO           18    .text.expanderWrite  main.o
    0x0000161e   0x0000161e   0x00000002   PAD
    0x00001620   0x00001620   0x0000000e   Code   RO           10    .text.gearreverseoff  main.o
    0x0000162e   0x0000162e   0x00000002   PAD
    0x00001630   0x00001630   0x0000000e   Code   RO            8    .text.gearreverseon  main.o
    0x0000163e   0x0000163e   0x00000002   PAD
    0x00001640   0x00001640   0x00000018   Code   RO           38    .text.home          main.o
    0x00001658   0x00001658   0x0000007a   Code   RO           62    .text.initButtons   main.o
    0x000016d2   0x000016d2   0x00000002   PAD
    0x000016d4   0x000016d4   0x00000048   Code   RO            4    .text.initBuzzer    main.o
    0x0000171c   0x0000171c   0x00000058   Code   RO           94    .text.initDriverDoor  main.o
    0x00001774   0x00001774   0x00000058   Code   RO            6    .text.initGearSwitch  main.o
    0x000017cc   0x000017cc   0x00000058   Code   RO           90    .text.initIgnitionSwitch  main.o
    0x00001824   0x00001824   0x000000b8   Code   RO           70    .text.initPotentiometer  main.o
    0x000018dc   0x000018dc   0x00000048   Code   RO           78    .text.initUltrasonicLEDs  main.o
    0x00001924   0x00001924   0x00000010   Code   RO           96    .text.isDoorOpen    main.o
    0x00001934   0x00001934   0x0000011a   Code   RO          102    .text.main          main.o
    0x00001a4e   0x00001a4e   0x00000002   PAD
    0x00001a50   0x00001a50   0x00000022   Code   RO           56    .text.print         main.o
    0x00001a72   0x00001a72   0x00000002   PAD
    0x00001a74   0x00001a74   0x0000010e   Code   RO          622    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x00001b82   0x00001b82   0x00000002   PAD
    0x00001b84   0x00001b84   0x00000170   Code   RO          606    .text.prvAddNewTaskToReadyList  tasks.o
    0x00001cf4   0x00001cf4   0x0000007e   Code   RO          784    .text.prvCheckForValidListAndQueue  timers.o
    0x00001d72   0x00001d72   0x00000002   PAD
    0x00001d74   0x00001d74   0x0000005a   Code   RO          656    .text.prvCheckTasksWaitingTermination  tasks.o
    0x00001dce   0x00001dce   0x00000002   PAD
    0x00001dd0   0x00001dd0   0x00000042   Code   RO          559    .text.prvCopyDataFromQueue  queue.o
    0x00001e12   0x00001e12   0x00000002   PAD
    0x00001e14   0x00001e14   0x000000cc   Code   RO          547    .text.prvCopyDataToQueue  queue.o
    0x00001ee0   0x00001ee0   0x000000c8   Code   RO          652    .text.prvCreateIdleTasks  tasks.o
    0x00001fa8   0x00001fa8   0x00000078   Code   RO          604    .text.prvCreateStaticTask  tasks.o
    0x00002020   0x00002020   0x0000008e   Code   RO          610    .text.prvCreateTask  tasks.o
    0x000020ae   0x000020ae   0x00000002   PAD
    0x000020b0   0x000020b0   0x0000003c   Code   RO          616    .text.prvDeleteTCB  tasks.o
    0x000020ec   0x000020ec   0x00000026   Code   RO          563    .text.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x00002112   0x00002112   0x00000002   PAD
    0x00002114   0x00002114   0x00000040   Code   RO          830    .text.prvGetNextExpireTime  timers.o
    0x00002154   0x00002154   0x000000aa   Code   RO          483    .text.prvHeapInit   heap_4.o
    0x000021fe   0x000021fe   0x00000002   PAD
    0x00002200   0x00002200   0x00000038   Code   RO          746    .text.prvIdleTask   tasks.o
    0x00002238   0x00002238   0x0000002c   Code   RO          527    .text.prvInitialiseMutex  queue.o
    0x00002264   0x00002264   0x00000048   Code   RO          519    .text.prvInitialiseNewQueue  queue.o
    0x000022ac   0x000022ac   0x000000e6   Code   RO          742    .text.prvInitialiseNewTask  tasks.o
    0x00002392   0x00002392   0x00000002   PAD
    0x00002394   0x00002394   0x0000008e   Code   RO          744    .text.prvInitialiseTaskLists  tasks.o
    0x00002422   0x00002422   0x00000002   PAD
    0x00002424   0x00002424   0x000000d8   Code   RO          487    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x000024fc   0x000024fc   0x00000086   Code   RO          844    .text.prvInsertTimerInActiveList  timers.o
    0x00002582   0x00002582   0x00000002   PAD
    0x00002584   0x00002584   0x00000028   Code   RO          561    .text.prvIsQueueEmpty  queue.o
    0x000025ac   0x000025ac   0x0000002e   Code   RO          549    .text.prvIsQueueFull  queue.o
    0x000025da   0x000025da   0x00000002   PAD
    0x000025dc   0x000025dc   0x00000028   Code   RO          461    .text.prvPortStartFirstTask  port.o
    0x00002604   0x00002604   0x00000054   Code   RO          838    .text.prvProcessExpiredTimer  timers.o
    0x00002658   0x00002658   0x0000014e   Code   RO          834    .text.prvProcessReceivedCommands  timers.o
    0x000027a6   0x000027a6   0x00000002   PAD
    0x000027a8   0x000027a8   0x0000009a   Code   RO          832    .text.prvProcessTimerOrBlockTask  timers.o
    0x00002842   0x00002842   0x00000002   PAD
    0x00002844   0x00002844   0x00000034   Code   RO          842    .text.prvReloadTimer  timers.o
    0x00002878   0x00002878   0x0000003c   Code   RO          614    .text.prvResetNextTaskUnblockTime  tasks.o
    0x000028b4   0x000028b4   0x00000044   Code   RO          836    .text.prvSampleTimeNow  timers.o
    0x000028f8   0x000028f8   0x00000052   Code   RO          840    .text.prvSwitchTimerLists  timers.o
    0x0000294a   0x0000294a   0x00000002   PAD
    0x0000294c   0x0000294c   0x00000026   Code   RO          451    .text.prvTaskExitError  port.o
    0x00002972   0x00002972   0x00000002   PAD
    0x00002974   0x00002974   0x0000001e   Code   RO          786    .text.prvTimerTask  timers.o
    0x00002992   0x00002992   0x00000002   PAD
    0x00002994   0x00002994   0x000000ae   Code   RO          551    .text.prvUnlockQueue  queue.o
    0x00002a42   0x00002a42   0x00000002   PAD
    0x00002a44   0x00002a44   0x00000038   Code   RO           20    .text.pulseEnable   main.o
    0x00002a7c   0x00002a7c   0x000001b6   Code   RO          481    .text.pvPortMalloc  heap_4.o
    0x00002c32   0x00002c32   0x00000002   PAD
    0x00002c34   0x00002c34   0x00000024   Code   RO          720    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x00002c58   0x00002c58   0x0000005e   Code   RO          449    .text.pxPortInitialiseStack  port.o
    0x00002cb6   0x00002cb6   0x00000002   PAD
    0x00002cb8   0x00002cb8   0x000000b8   Code   RO           74    .text.readPotentiometer  main.o
    0x00002d70   0x00002d70   0x00000048   Code   RO           24    .text.send          main.o
    0x00002db8   0x00002db8   0x00000050   Code   RO           44    .text.setCursor     main.o
    0x00002e08   0x00002e08   0x00000062   Code   RO           66    .text.showdoorstatus  main.o
    0x00002e6a   0x00002e6a   0x00000002   PAD
    0x00002e6c   0x00002e6c   0x00000078   Code   RO           64    .text.toggleDoorLock  main.o
    0x00002ee4   0x00002ee4   0x00000048   Code   RO          440    .text.uxListRemove  list.o
    0x00002f2c   0x00002f2c   0x0000002a   Code   RO          736    .text.vApplicationGetIdleTaskMemory  tasks.o
    0x00002f56   0x00002f56   0x00000002   PAD
    0x00002f58   0x00002f58   0x0000002a   Code   RO          738    .text.vApplicationGetTimerTaskMemory  tasks.o
    0x00002f82   0x00002f82   0x00000002   PAD
    0x00002f84   0x00002f84   0x0000000a   Code   RO          303    .text.vApplicationStackOverflowHook  cmsis_os2.o
    0x00002f8e   0x00002f8e   0x00000002   PAD
    0x00002f90   0x00002f90   0x0000002e   Code   RO          432    .text.vListInitialise  list.o
    0x00002fbe   0x00002fbe   0x00000002   PAD
    0x00002fc0   0x00002fc0   0x0000000e   Code   RO          434    .text.vListInitialiseItem  list.o
    0x00002fce   0x00002fce   0x00000002   PAD
    0x00002fd0   0x00002fd0   0x0000006a   Code   RO          438    .text.vListInsert   list.o
    0x0000303a   0x0000303a   0x00000002   PAD
    0x0000303c   0x0000303c   0x00000014   Code   RO          459    .text.vPortEnableVFP  port.o
    0x00003050   0x00003050   0x00000030   Code   RO          465    .text.vPortEnterCritical  port.o
    0x00003080   0x00003080   0x00000026   Code   RO          467    .text.vPortExitCritical  port.o
    0x000030a6   0x000030a6   0x00000002   PAD
    0x000030a8   0x000030a8   0x00000076   Code   RO          485    .text.vPortFree     heap_4.o
    0x0000311e   0x0000311e   0x00000002   PAD
    0x00003120   0x00003120   0x00000044   Code   RO          457    .text.vPortSetupTimerInterrupt  port.o
    0x00003164   0x00003164   0x00000064   Code   RO          593    .text.vQueueWaitForMessageRestricted  queue.o
    0x000031c8   0x000031c8   0x0000004a   Code   RO          626    .text.vTaskDelay    tasks.o
    0x00003212   0x00003212   0x00000002   PAD
    0x00003214   0x00003214   0x00000024   Code   RO          690    .text.vTaskInternalSetTimeOutState  tasks.o
    0x00003238   0x00003238   0x0000000e   Code   RO          694    .text.vTaskMissedYield  tasks.o
    0x00003246   0x00003246   0x00000002   PAD
    0x00003248   0x00003248   0x00000026   Code   RO          678    .text.vTaskPlaceOnEventList  tasks.o
    0x0000326e   0x0000326e   0x00000002   PAD
    0x00003270   0x00003270   0x00000064   Code   RO          682    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x000032d4   0x000032d4   0x00000138   Code   RO          716    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x0000340c   0x0000340c   0x00000072   Code   RO          650    .text.vTaskStartScheduler  tasks.o
    0x0000347e   0x0000347e   0x00000002   PAD
    0x00003480   0x00003480   0x00000010   Code   RO          620    .text.vTaskSuspendAll  tasks.o
    0x00003490   0x00003490   0x0000011c   Code   RO          642    .text.vTaskSwitchContext  tasks.o
    0x000035ac   0x000035ac   0x0000001e   Code   RO           28    .text.write         main.o
    0x000035ca   0x000035ca   0x00000002   PAD
    0x000035cc   0x000035cc   0x00000022   Code   RO           22    .text.write4bits    main.o
    0x000035ee   0x000035ee   0x00000002   PAD
    0x000035f0   0x000035f0   0x0000003e   Code   RO           30    .text.write_string  main.o
    0x0000362e   0x0000362e   0x00000002   PAD
    0x00003630   0x00003630   0x0000006c   Code   RO          455    .text.xPortStartScheduler  port.o
    0x0000369c   0x0000369c   0x0000003e   Code   RO          471    .text.xPortSysTickHandler  port.o
    0x000036da   0x000036da   0x00000002   PAD
    0x000036dc   0x000036dc   0x00000026   Code   RO          525    .text.xQueueCreateMutex  queue.o
    0x00003702   0x00003702   0x00000002   PAD
    0x00003704   0x00003704   0x00000086   Code   RO          523    .text.xQueueGenericCreate  queue.o
    0x0000378a   0x0000378a   0x00000002   PAD
    0x0000378c   0x0000378c   0x0000006c   Code   RO          517    .text.xQueueGenericCreateStatic  queue.o
    0x000037f8   0x000037f8   0x000000d0   Code   RO          515    .text.xQueueGenericReset  queue.o
    0x000038c8   0x000038c8   0x0000016a   Code   RO          537    .text.xQueueGenericSend  queue.o
    0x00003a32   0x00003a32   0x00000002   PAD
    0x00003a34   0x00003a34   0x00000152   Code   RO          557    .text.xQueueReceive  queue.o
    0x00003b86   0x00003b86   0x00000002   PAD
    0x00003b88   0x00003b88   0x0000019e   Code   RO          541    .text.xQueueSemaphoreTake  queue.o
    0x00003d26   0x00003d26   0x00000002   PAD
    0x00003d28   0x00003d28   0x000000c4   Code   RO          692    .text.xTaskCheckForTimeOut  tasks.o
    0x00003dec   0x00003dec   0x00000052   Code   RO          608    .text.xTaskCreate   tasks.o
    0x00003e3e   0x00003e3e   0x00000002   PAD
    0x00003e40   0x00003e40   0x0000005c   Code   RO          602    .text.xTaskCreateStatic  tasks.o
    0x00003e9c   0x00003e9c   0x00000038   Code   RO          710    .text.xTaskGetSchedulerState  tasks.o
    0x00003ed4   0x00003ed4   0x00000014   Code   RO          660    .text.xTaskGetTickCount  tasks.o
    0x00003ee8   0x00003ee8   0x0000025e   Code   RO          658    .text.xTaskIncrementTick  tasks.o
    0x00004146   0x00004146   0x00000002   PAD
    0x00004148   0x00004148   0x000000f2   Code   RO          714    .text.xTaskPriorityDisinherit  tasks.o
    0x0000423a   0x0000423a   0x00000002   PAD
    0x0000423c   0x0000423c   0x0000015c   Code   RO          712    .text.xTaskPriorityInherit  tasks.o
    0x00004398   0x00004398   0x00000194   Code   RO          684    .text.xTaskRemoveFromEventList  tasks.o
    0x0000452c   0x0000452c   0x0000023e   Code   RO          624    .text.xTaskResumeAll  tasks.o
    0x0000476a   0x0000476a   0x00000002   PAD
    0x0000476c   0x0000476c   0x00000078   Code   RO          782    .text.xTimerCreateTimerTask  timers.o
    0x000047e4   0x000047e4   0x00000028   Code   RO          867    i.GPIODirModeSet    driverlib.lib(gpio.o)
    0x0000480c   0x0000480c   0x00000170   Code   RO          879    i.GPIOPadConfigSet  driverlib.lib(gpio.o)
    0x0000497c   0x0000497c   0x00000044   Code   RO          880    i.GPIOPinConfigure  driverlib.lib(gpio.o)
    0x000049c0   0x000049c0   0x0000001c   Code   RO          894    i.GPIOPinTypeI2C    driverlib.lib(gpio.o)
    0x000049dc   0x000049dc   0x0000001c   Code   RO          895    i.GPIOPinTypeI2CSCL  driverlib.lib(gpio.o)
    0x000049f8   0x000049f8   0x0000000c   Code   RO         1211    i.I2CMasterBusy     driverlib.lib(i2c.o)
    0x00004a04   0x00004a04   0x00000004   Code   RO         1212    i.I2CMasterControl  driverlib.lib(i2c.o)
    0x00004a08   0x00004a08   0x00000004   Code   RO         1214    i.I2CMasterDataPut  driverlib.lib(i2c.o)
    0x00004a0c   0x00004a0c   0x00000054   Code   RO         1219    i.I2CMasterInitExpClk  driverlib.lib(i2c.o)
    0x00004a60   0x00004a60   0x00000008   Code   RO         1229    i.I2CMasterSlaveAddrSet  driverlib.lib(i2c.o)
    0x00004a68   0x00004a68   0x00000154   Code   RO         1540    i.SysCtlClockGet    driverlib.lib(sysctl.o)
    0x00004bbc   0x00004bbc   0x00000028   Code   RO         1571    i.SysCtlPeripheralEnable  driverlib.lib(sysctl.o)
    0x00004be4   0x00004be4   0x0000003c   Code   RO         1576    i.SysCtlPeripheralReset  driverlib.lib(sysctl.o)
    0x00004c20   0x00004c20   0x00000034   Code   RO         2031    i.__0snprintf       mc_w.l(printfa.o)
    0x00004c54   0x00004c54   0x0000000e   Code   RO         2115    i.__scatterload_copy  mc_w.l(handlers.o)
    0x00004c62   0x00004c62   0x00000002   Code   RO         2116    i.__scatterload_null  mc_w.l(handlers.o)
    0x00004c64   0x00004c64   0x0000000e   Code   RO         2117    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x00004c72   0x00004c72   0x00000002   PAD
    0x00004c74   0x00004c74   0x00000184   Code   RO         2037    i._fp_digits        mc_w.l(printfa.o)
    0x00004df8   0x00004df8   0x000006dc   Code   RO         2038    i._printf_core      mc_w.l(printfa.o)
    0x000054d4   0x000054d4   0x00000024   Code   RO         2039    i._printf_post_padding  mc_w.l(printfa.o)
    0x000054f8   0x000054f8   0x0000002e   Code   RO         2040    i._printf_pre_padding  mc_w.l(printfa.o)
    0x00005526   0x00005526   0x00000016   Code   RO         2041    i._snputc           mc_w.l(printfa.o)
    0x0000553c   0x0000553c   0x00000228   Data   RO          912    .constdata          driverlib.lib(gpio.o)
    0x00005764   0x00005764   0x00000254   Data   RO         1593    .constdata          driverlib.lib(sysctl.o)
    0x000059b8   0x000059b8   0x000000b7   Data   RO          110    .rodata.str1.1      main.o
    0x00005a6f   0x00005a6f   0x00000005   Data   RO          774    .rodata.str1.1      tasks.o
    0x00005a74   0x00005a74   0x00000008   Data   RO          847    .rodata.str1.1      timers.o
    0x00005a7c   0x00005a7c   0x00000004   Data   RO          765    .rodata.uxTopUsedPriority  tasks.o
    0x00005a80   0x00005a80   0x00000020   Data   RO         2114    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x00005aa0, Size: 0x00002c38, Max: 0x00008000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00005aa0   0x00000004   Data   RW          384    .data.SystemCoreClock  system_tm4c123.o
    0x20000004   0x00005aa4   0x00000004   Data   RW          473    .data.uxCriticalNesting  port.o
    0x20000008        -       0x00000008   Zero   RW          111    .bss.dis            main.o
    0x20000010        -       0x00000004   Zero   RW          115    .bss.distance       main.o
    0x20000014        -       0x00000014   Zero   RW          116    .bss.diststr        main.o
    0x20000028        -       0x00000004   Zero   RW          104    .bss.doorLocked     main.o
    0x2000002c        -       0x00000004   Zero   RW          105    .bss.gearReverse    main.o
    0x20000030        -       0x00000004   Zero   RW          108    .bss.gearSwitchState  main.o
    0x20000034        -       0x00000001   Zero   RW          107    .bss.globalLock     main.o
    0x20000035        -       0x00000001   Zero   RW          106    .bss.globalSpeed    main.o
    0x20000036   0x00005aa8   0x00000002   PAD
    0x20000038        -       0x00000004   Zero   RW          117    .bss.ignitionSwitchState  main.o
    0x2000003c        -       0x00000050   Zero   RW          855    .bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage  timers.o
    0x2000008c        -       0x00000050   Zero   RW          854    .bss.prvCheckForValidListAndQueue.xStaticTimerQueue  timers.o
    0x200000dc        -       0x00000004   Zero   RW          851    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x200000e0        -       0x00000004   Zero   RW          748    .bss.pxCurrentTCB   tasks.o
    0x200000e4        -       0x00000004   Zero   RW          849    .bss.pxCurrentTimerList  timers.o
    0x200000e8        -       0x00000004   Zero   RW          755    .bss.pxDelayedTaskList  tasks.o
    0x200000ec        -       0x00000004   Zero   RW          501    .bss.pxEnd          heap_4.o
    0x200000f0        -       0x00000004   Zero   RW          756    .bss.pxOverflowDelayedTaskList  tasks.o
    0x200000f4        -       0x00000004   Zero   RW          850    .bss.pxOverflowTimerList  timers.o
    0x200000f8        -       0x00000460   Zero   RW          759    .bss.pxReadyTasksLists  tasks.o
    0x20000558        -       0x00000004   Zero   RW          113    .bss.speed          main.o
    0x2000055c        -       0x00000004   Zero   RW          114    .bss.time           main.o
    0x20000560        -       0x00002000   Zero   RW          507    .bss.ucHeap         heap_4.o
    0x20002560        -       0x00000004   Zero   RW          753    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20002564        -       0x00000004   Zero   RW          752    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x20002568        -       0x00000004   Zero   RW          761    .bss.uxSchedulerSuspended  tasks.o
    0x2000256c        -       0x00000004   Zero   RW          749    .bss.uxTaskNumber   tasks.o
    0x20002570        -       0x00000004   Zero   RW          760    .bss.uxTopReadyPriority  tasks.o
    0x20002574        -       0x00000200   Zero   RW          769    .bss.vApplicationGetIdleTaskMemory.uxIdleTaskStack  tasks.o
    0x20002774        -       0x0000005c   Zero   RW          768    .bss.vApplicationGetIdleTaskMemory.xIdleTaskTCB  tasks.o
    0x200027d0        -       0x00000140   Zero   RW          771    .bss.vApplicationGetTimerTaskMemory.uxTimerTaskStack  tasks.o
    0x20002910        -       0x0000005c   Zero   RW          770    .bss.vApplicationGetTimerTaskMemory.xTimerTaskTCB  tasks.o
    0x2000296c        -       0x00000014   Zero   RW          852    .bss.xActiveTimerList1  timers.o
    0x20002980        -       0x00000014   Zero   RW          853    .bss.xActiveTimerList2  timers.o
    0x20002994        -       0x00000014   Zero   RW          772    .bss.xDelayedTaskList1  tasks.o
    0x200029a8        -       0x00000014   Zero   RW          773    .bss.xDelayedTaskList2  tasks.o
    0x200029bc        -       0x00000004   Zero   RW          502    .bss.xFreeBytesRemaining  heap_4.o
    0x200029c0        -       0x00000004   Zero   RW          764    .bss.xIdleTaskHandles  tasks.o
    0x200029c4        -       0x00000004   Zero   RW          504    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x200029c8        -       0x00000004   Zero   RW          112    .bss.xMutex         main.o
    0x200029cc        -       0x00000004   Zero   RW          763    .bss.xNextTaskUnblockTime  tasks.o
    0x200029d0        -       0x00000004   Zero   RW          767    .bss.xNumOfOverflows  tasks.o
    0x200029d4        -       0x00000004   Zero   RW          505    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x200029d8        -       0x00000004   Zero   RW          506    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x200029dc        -       0x00000004   Zero   RW          766    .bss.xPendedTicks   tasks.o
    0x200029e0        -       0x00000014   Zero   RW          757    .bss.xPendingReadyList  tasks.o
    0x200029f4        -       0x00000004   Zero   RW          750    .bss.xSchedulerRunning  tasks.o
    0x200029f8        -       0x00000008   Zero   RW          503    .bss.xStart         heap_4.o
    0x20002a00        -       0x00000014   Zero   RW          758    .bss.xSuspendedTaskList  tasks.o
    0x20002a14        -       0x00000014   Zero   RW          751    .bss.xTasksWaitingTermination  tasks.o
    0x20002a28        -       0x00000004   Zero   RW          754    .bss.xTickCount     tasks.o
    0x20002a2c        -       0x00000004   Zero   RW          846    .bss.xTimerQueue    timers.o
    0x20002a30        -       0x00000004   Zero   RW          848    .bss.xTimerTaskHandle  timers.o
    0x20002a34        -       0x00000004   Zero   RW          762    .bss.xYieldPendings  tasks.o
    0x20002a38        -       0x00000200   Zero   RW          368    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

        40          0          0          0          0      29868   cmsis_os2.o
       942          0          0          0       8220       4523   heap_4.o
       238          0          0          0          0       2338   list.o
      4460         36        183          0         62      15522   main.o
       652         16          0          4          0       2946   port.o
      2386          0          0          0          0      14886   queue.o
       252         10        620          0        512       5468   startup_tm4c123.o
       268          0          0          4          0       6798   system_tm4c123.o
      5466          0          9          0       2296      27375   tasks.o
      1248         10          8          0        220      11204   timers.o

    ----------------------------------------------------------------------
     16096         84        852          8      11312     120928   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       144         12          0          0          2          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       532         22        552          0          0       8616   gpio.o
       112         12          0          0          0       3481   i2c.o
       440         44        596          0          0       3730   sysctl.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        30          0          0          0          0         68   llshl.o
        36          0          0          0          0         68   llsshr.o
        32          0          0          0          0         68   llushr.o
        36          0          0          0          0         68   memcpya.o
        36          0          0          0          0        108   memseta.o
      2300         84          0          0          0        524   printfa.o
        14          0          0          0          0         68   strlen.o
        44          0          0          0          0         80   uidiv.o
        98          0          0          0          0         92   uldiv.o
        48          0          0          0          0         68   cdrcmple.o
        56          0          0          0          0         88   d2f.o
       334          0          0          0          0        148   dadd.o
       222          0          0          0          0        100   ddiv.o
       186          0          0          0          0        176   depilogue.o
        48          0          0          0          0         68   dfixul.o
        34          0          0          0          0         76   dflti.o
       228          0          0          0          0         96   dmul.o
        38          0          0          0          0         68   f2d.o
       110          0          0          0          0        168   fepilogue.o

    ----------------------------------------------------------------------
      5104        178       1148          0          0      18095   Library Totals
         4          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1084         78       1148          0          0      15827   driverlib.lib
      2712        100          0          0          0       1212   mc_w.l
      1304          0          0          0          0       1056   mf_w.l

    ----------------------------------------------------------------------
      5104        178       1148          0          0      18095   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     21200        262       2000          8      11312     137123   Grand Totals
     21200        262       2000          8      11312     137123   ELF Image Totals
     21200        262       2000          8          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                23200 (  22.66kB)
    Total RW  Size (RW Data + ZI Data)             11320 (  11.05kB)
    Total ROM Size (Code + RO Data + RW Data)      23208 (  22.66kB)

==============================================================================

